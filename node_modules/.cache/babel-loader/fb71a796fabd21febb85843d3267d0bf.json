{"ast":null,"code":"import { profileAPI } from \"../api/api\";\nconst SET_PROFILE = \"SET-PROFILE\";\nconst SET_PROFILE_STATUS = \"SET-PROFILE-STATUS\";\nlet initialState = {\n  posts: [{\n    text: \"post 1 \",\n    id: 1,\n    like: 12\n  }, {\n    text: \"post 2 \",\n    id: 2,\n    like: 13\n  }, {\n    text: \"post 3 \",\n    id: 3,\n    like: 15\n  }, {\n    text: \"post 4 \",\n    id: 4,\n    like: 2\n  }],\n  currentValue: \"\",\n  profile: {},\n  isFetching: false,\n  status: \"\"\n};\n\nlet profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"ADD-POST\":\n      {\n        debugger;\n        let newState = { ...state,\n          posts: [...state.posts]\n        };\n        newState.posts.push({\n          text: action.postValue,\n          id: 6,\n          like: 2\n        }); // newState.currentValue =\"\";\n\n        return newState;\n      }\n\n    case \"POST-CHANGED\":\n      {\n        debugger;\n        let newState = { ...state\n        };\n        newState.currentValue = action.value;\n        return newState;\n      }\n\n    case \"SET-PROFILE\":\n      {\n        return { ...state,\n          profile: { ...action.profile\n          }\n        };\n      }\n\n    case \"SET-PROFILE-STATUS\":\n      {\n        return { ...state,\n          status: action.statusValue\n        };\n      }\n\n    case \"TOGGLE-IS-FETCHING\":\n      {\n        return { ...state,\n          isFetching: action.isFetchingValue\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default profileReducer;\nexport const toggleIsFetching = isFetchingValue => ({\n  type: \"TOGGLE-IS-FETCHING\",\n  isFetchingValue: isFetchingValue\n});\nexport const setProfile = profile => ({\n  type: SET_PROFILE,\n  profile: profile\n});\nexport const setStatus = statusValue => ({\n  type: SET_PROFILE_STATUS,\n  statusValue: statusValue\n});\nexport const getUserProfileThunkCreator = userId => {\n  return dispatch => {\n    // dispatch(toggleIsFetching(true));\n    profileAPI.getProfile(userId).then(data => {\n      dispatch(setProfile(data)); // dispatch(toggleIsFetching(false));\n    });\n  };\n};\nexport const getUserProfileStatusThunkCreator = userId => {\n  return dispatch => {\n    profileAPI.getProfileStatus(userId).then(data => {\n      dispatch(setStatus(data));\n    });\n  };\n};\nexport const changeProfileStatusThunkCreator = status => {\n  return dispatch => {\n    profileAPI.changeProfileStatus(status).then(data => {\n      if (data.resultCode === 0) {\n        dispatch(setStatus(status));\n      }\n    });\n  };\n};","map":{"version":3,"sources":["/Users/andrejzaharcenko/Desktop/second-network/src/redux/profile-reducer.js"],"names":["profileAPI","SET_PROFILE","SET_PROFILE_STATUS","initialState","posts","text","id","like","currentValue","profile","isFetching","status","profileReducer","state","action","type","newState","push","postValue","value","statusValue","isFetchingValue","toggleIsFetching","setProfile","setStatus","getUserProfileThunkCreator","userId","dispatch","getProfile","then","data","getUserProfileStatusThunkCreator","getProfileStatus","changeProfileStatusThunkCreator","changeProfileStatus","resultCode"],"mappings":"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","sourcesContent":["import {profileAPI} from \"../api/api\";\n\nconst SET_PROFILE = \"SET-PROFILE\";\nconst SET_PROFILE_STATUS = \"SET-PROFILE-STATUS\";\n\nlet initialState ={\n\n        posts: [\n            {text: \"post 1 \", id: 1, like: 12},\n            {text: \"post 2 \", id: 2, like: 13},\n            {text: \"post 3 \", id: 3, like: 15},\n            {text: \"post 4 \", id: 4, like: 2},\n        ],\n        currentValue: \"\",\n        profile: {},\n        isFetching:false,\n        status:\"\",\n}\nlet  profileReducer =(state = initialState,action)=>{\n    switch (action.type) {\n        case \"ADD-POST\":{\n            debugger;\n            let newState ={...state,\n            posts:[...state.posts]};\n\n            newState.posts.push({text: action.postValue , id: 6, like: 2});\n            // newState.currentValue =\"\";\n\n            return newState;}\n        case \"POST-CHANGED\":{\n            debugger;\n            let newState = {...state};\n            newState.currentValue = action.value;\n            return newState;}\n        case \"SET-PROFILE\":{\n\n            return { ...state, profile: {...action.profile}};\n        }\n        case \"SET-PROFILE-STATUS\":{\n\n            return { ...state, status: action.statusValue};\n        }\n        case \"TOGGLE-IS-FETCHING\":{\n\n            return {...state, isFetching: action.isFetchingValue};\n        }\n        default:\n            return state;\n    }\n}\nexport default profileReducer;\nexport const toggleIsFetching =(isFetchingValue)=>({type:\"TOGGLE-IS-FETCHING\",isFetchingValue:isFetchingValue })\nexport const setProfile =(profile)=>({type:SET_PROFILE, profile:profile});\nexport const setStatus =(statusValue)=>({type:SET_PROFILE_STATUS, statusValue:statusValue});\n\nexport const getUserProfileThunkCreator =(userId)=>{\n    return(dispatch)=>{\n        // dispatch(toggleIsFetching(true));\n        profileAPI.getProfile(userId)\n            .then(data => {\n                dispatch(setProfile(data));\n                // dispatch(toggleIsFetching(false));\n            })\n    }\n}\nexport const getUserProfileStatusThunkCreator =(userId)=>{\n    return(dispatch)=>{\n\n        profileAPI.getProfileStatus(userId)\n        .then(data=>{\n            dispatch(setStatus(data));\n\n        })\n    }\n}\nexport const changeProfileStatusThunkCreator =(status)=>{\n    return(dispatch)=>{\n        profileAPI.changeProfileStatus(status)\n            .then(data=>{\n                if(data.resultCode ===0){\n                    dispatch(setStatus(status))\n                }\n            })\n    }\n}"]},"metadata":{},"sourceType":"module"}