{"ast":null,"code":"var _jsxFileName = \"/Users/andrejzaharcenko/Desktop/second-network/src/index.js\";\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./redux/redux-store\";\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\n\nlet renderEntireTree = () => {\n  debugger;\n  ReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n    store: store,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(React.StrictMode, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(App, {\n    state: store.getState(),\n    dispatch: store.dispatch.bind(store),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  })), \", document.getElementById('root')\"));\n};\n\nrenderEntireTree(); //короче это колбэк, чтобы перерисовывать страницу когда она меняется\n\nstore.subscribe(() => {\n  // let state = store.getState();\n  renderEntireTree();\n});\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/andrejzaharcenko/Desktop/second-network/src/index.js"],"names":["serviceWorker","store","ReactDOM","React","App","Provider","renderEntireTree","render","getState","dispatch","bind","subscribe","unregister"],"mappings":";AAAA,OAAO,KAAKA,aAAZ,MAA+B,iBAA/B;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAAQC,QAAR,QAAuB,aAAvB;;AAEA,IAAIC,gBAAgB,GAAE,MAAI;AACtB;AACAJ,EAAAA,QAAQ,CAACK,MAAT,eACI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEN,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGI,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAGA,KAAK,CAACO,QAAN,EAAb;AAA+B,IAAA,QAAQ,EAAEP,KAAK,CAACQ,QAAN,CAAeC,IAAf,CAAoBT,KAApB,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADA,sCADJ;AAUH,CAZD;;AAaAK,gBAAgB,G,CAIhB;;AACAL,KAAK,CAACU,SAAN,CAAgB,MAAI;AAChB;AACAL,EAAAA,gBAAgB;AACnB,CAHD;AAIAN,aAAa,CAACY,UAAd","sourcesContent":["import * as serviceWorker from './serviceWorker';\nimport store from \"./redux/redux-store\";\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport App from \"./App\";\nimport {Provider} from \"react-redux\";\n\nlet renderEntireTree =()=>{\n    debugger;\n    ReactDOM.render(\n        <Provider store={store} >\n        <React.StrictMode>\n            {/* функция bind нужна чтобы при вызове методов эти методы ссылались на свой родно обьект в котором они созданы\n            либо на тот обьект, с которым они забайдины*/}\n            <App state ={store.getState()} dispatch={store.dispatch.bind(store)}/>\n        </React.StrictMode>,\n        document.getElementById('root')\n         </Provider>\n    );\n}\nrenderEntireTree();\n\n\n\n//короче это колбэк, чтобы перерисовывать страницу когда она меняется\nstore.subscribe(()=>{\n    // let state = store.getState();\n    renderEntireTree();\n});\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}