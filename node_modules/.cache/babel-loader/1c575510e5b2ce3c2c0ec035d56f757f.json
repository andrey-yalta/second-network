{"ast":null,"code":"let store = {\n  _state: {\n    dialogsPage: {\n      users: [{\n        id: 1,\n        name: \"Dimych\"\n      }, {\n        id: 2,\n        name: \"Ivan\"\n      }, {\n        id: 3,\n        name: \"Sveta\"\n      }, {\n        id: 4,\n        name: \"Olga\"\n      }, {\n        id: 5,\n        name: \"Sasha\"\n      }],\n      messages: [{\n        id: 1,\n        message: \"hello\"\n      }, {\n        id: 2,\n        message: \"WHats up?\"\n      }, {\n        id: 3,\n        message: \"How is your name?\"\n      }, {\n        id: 4,\n        message: \"bla bla bla\"\n      }, {\n        id: 5,\n        message: \"Yo\"\n      }, {\n        id: 6,\n        message: \"Hello from Yata with love\"\n      }]\n    },\n    postPage: {\n      posts: [{\n        text: \"post 1 \",\n        id: 1,\n        like: 12\n      }, {\n        text: \"post 2 \",\n        id: 2,\n        like: 13\n      }, {\n        text: \"post 3 \",\n        id: 3,\n        like: 15\n      }, {\n        text: \"post 4 \",\n        id: 4,\n        like: 2\n      }],\n      currentValue: \"\"\n    }\n  },\n\n  getState() {\n    return this._state;\n  },\n\n  renderEntireTree() {},\n\n  //короче это колбэк, чтобы перерисовывать страницу когда она меняется\n  subscribe(observer) {\n    debugger;\n    this.renderEntireTree = observer;\n  },\n\n  // даннаый метод создан чтобы собрать в нем все методы по работе со стейтом и передавать лишь его а не 100+ методов по отдельности\n  dispatch(action) {\n    if (action.type === \"ADD-POST\") {\n      this._state.postPage.posts.push({\n        text: action.postText,\n        id: 6,\n        like: action.postLike\n      });\n\n      this._state.postPage.currentValue = \"\";\n      this.renderEntireTree();\n    } else if (action.type === \"POST-CHANGED\") {\n      this._state.postPage.currentValue = action.value;\n      this.renderEntireTree();\n    }\n  }\n\n};\nexport default store;","map":{"version":3,"sources":["/Users/andrejzaharcenko/Desktop/second-network/src/state.js"],"names":["store","_state","dialogsPage","users","id","name","messages","message","postPage","posts","text","like","currentValue","getState","renderEntireTree","subscribe","observer","dispatch","action","type","push","postText","postLike","value"],"mappings":"AAAA,IAAIA,KAAK,GAAG;AACRC,EAAAA,MAAM,EAAE;AACJC,IAAAA,WAAW,EAAE;AACTC,MAAAA,KAAK,EAAE,CACH;AAACC,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,IAAI,EAAE;AAAd,OADG,EAEH;AAACD,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,IAAI,EAAE;AAAd,OAFG,EAGH;AAACD,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,IAAI,EAAE;AAAd,OAHG,EAIH;AAACD,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,IAAI,EAAE;AAAd,OAJG,EAKH;AAACD,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,IAAI,EAAE;AAAd,OALG,CADE;AAOTC,MAAAA,QAAQ,EAAE,CACN;AAACF,QAAAA,EAAE,EAAE,CAAL;AAAQG,QAAAA,OAAO,EAAE;AAAjB,OADM,EAEN;AAACH,QAAAA,EAAE,EAAE,CAAL;AAAQG,QAAAA,OAAO,EAAE;AAAjB,OAFM,EAGN;AAACH,QAAAA,EAAE,EAAE,CAAL;AAAQG,QAAAA,OAAO,EAAE;AAAjB,OAHM,EAIN;AAACH,QAAAA,EAAE,EAAE,CAAL;AAAQG,QAAAA,OAAO,EAAE;AAAjB,OAJM,EAKN;AAACH,QAAAA,EAAE,EAAE,CAAL;AAAQG,QAAAA,OAAO,EAAE;AAAjB,OALM,EAMN;AAACH,QAAAA,EAAE,EAAE,CAAL;AAAQG,QAAAA,OAAO,EAAE;AAAjB,OANM;AAPD,KADT;AAiBJC,IAAAA,QAAQ,EAAE;AACNC,MAAAA,KAAK,EAAE,CACH;AAACC,QAAAA,IAAI,EAAE,SAAP;AAAkBN,QAAAA,EAAE,EAAE,CAAtB;AAAyBO,QAAAA,IAAI,EAAE;AAA/B,OADG,EAEH;AAACD,QAAAA,IAAI,EAAE,SAAP;AAAkBN,QAAAA,EAAE,EAAE,CAAtB;AAAyBO,QAAAA,IAAI,EAAE;AAA/B,OAFG,EAGH;AAACD,QAAAA,IAAI,EAAE,SAAP;AAAkBN,QAAAA,EAAE,EAAE,CAAtB;AAAyBO,QAAAA,IAAI,EAAE;AAA/B,OAHG,EAIH;AAACD,QAAAA,IAAI,EAAE,SAAP;AAAkBN,QAAAA,EAAE,EAAE,CAAtB;AAAyBO,QAAAA,IAAI,EAAE;AAA/B,OAJG,CADD;AAONC,MAAAA,YAAY,EAAE;AAPR;AAjBN,GADA;;AA4BRC,EAAAA,QAAQ,GAAE;AACN,WAAO,KAAKZ,MAAZ;AACH,GA9BO;;AA+BRa,EAAAA,gBAAgB,GAAG,CAAE,CA/Bb;;AAiCZ;AACIC,EAAAA,SAAS,CAACC,QAAD,EAAW;AAChB;AACA,SAAKF,gBAAL,GAAwBE,QAAxB;AACH,GArCO;;AAsCR;AACAC,EAAAA,QAAQ,CAACC,MAAD,EAAQ;AACZ,QAAGA,MAAM,CAACC,IAAP,KAAgB,UAAnB,EAA8B;AAC1B,WAAKlB,MAAL,CAAYO,QAAZ,CAAqBC,KAArB,CAA2BW,IAA3B,CAAgC;AAACV,QAAAA,IAAI,EAAEQ,MAAM,CAACG,QAAd;AAAwBjB,QAAAA,EAAE,EAAE,CAA5B;AAA+BO,QAAAA,IAAI,EAAEO,MAAM,CAACI;AAA5C,OAAhC;;AACA,WAAKrB,MAAL,CAAYO,QAAZ,CAAqBI,YAArB,GAAoC,EAApC;AACA,WAAKE,gBAAL;AACH,KAJD,MAKK,IAAGI,MAAM,CAACC,IAAP,KAAe,cAAlB,EAAiC;AAClC,WAAKlB,MAAL,CAAYO,QAAZ,CAAqBI,YAArB,GAAoCM,MAAM,CAACK,KAA3C;AACA,WAAKT,gBAAL;AACH;AACJ;;AAjDO,CAAZ;AAmDA,eAAed,KAAf","sourcesContent":["let store = {\n    _state: {\n        dialogsPage: {\n            users: [\n                {id: 1, name: \"Dimych\"},\n                {id: 2, name: \"Ivan\"},\n                {id: 3, name: \"Sveta\"},\n                {id: 4, name: \"Olga\"},\n                {id: 5, name: \"Sasha\"}],\n            messages: [\n                {id: 1, message: \"hello\"},\n                {id: 2, message: \"WHats up?\"},\n                {id: 3, message: \"How is your name?\"},\n                {id: 4, message: \"bla bla bla\"},\n                {id: 5, message: \"Yo\"},\n                {id: 6, message: \"Hello from Yata with love\"}\n            ],\n        },\n        postPage: {\n            posts: [\n                {text: \"post 1 \", id: 1, like: 12},\n                {text: \"post 2 \", id: 2, like: 13},\n                {text: \"post 3 \", id: 3, like: 15},\n                {text: \"post 4 \", id: 4, like: 2},\n            ],\n            currentValue: \"\",\n        }\n    },\n    getState(){\n        return this._state;\n    },\n    renderEntireTree() {},\n\n//короче это колбэк, чтобы перерисовывать страницу когда она меняется\n    subscribe(observer) {\n        debugger;\n        this.renderEntireTree = observer;\n    },\n    // даннаый метод создан чтобы собрать в нем все методы по работе со стейтом и передавать лишь его а не 100+ методов по отдельности\n    dispatch(action){\n        if(action.type === \"ADD-POST\"){\n            this._state.postPage.posts.push({text: action.postText, id: 6, like: action.postLike})\n            this._state.postPage.currentValue = \"\";\n            this.renderEntireTree();\n        }\n        else if(action.type ===\"POST-CHANGED\"){\n            this._state.postPage.currentValue = action.value;\n            this.renderEntireTree();\n        }\n    }\n}\nexport default store;"]},"metadata":{},"sourceType":"module"}