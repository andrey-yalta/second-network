{"ast":null,"code":"import { authAPI, headerAPI } from \"../api/api\";\nimport { Redirect } from \"react-router-dom\";\nimport React from \"react\";\nimport { dataKey } from \"redux-form/lib/util/eventConsts\";\nimport { stopSubmit } from \"redux-form\";\nconst SET_AUTH_DATA = \"SET-AUTH-DATA\";\nlet initialState = {\n  data: {},\n  isAuth: false\n};\n\nlet authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"SET-AUTH-DATA\":\n      {\n        // debugger;\n        return { ...state,\n          data: { ...action.data\n          }\n        };\n      }\n\n    case \"TOGGLE-IS-AUTH\":\n      {\n        // debugger;\n        return { ...state,\n          isAuth: true\n        };\n      }\n\n    case \"AUTH-IS-OFF\":\n      {\n        debugger;\n        return { ...state,\n          isAuth: false,\n          data: {}\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const loginThunkCreator = (email, password, rememberMe = true) => {\n  return dispatch => {\n    authAPI.login(email, password, rememberMe).then(data => {\n      if (data.resultCode === 0) {\n        dispatch(getAuthUserData());\n      } else {\n        let action = stopSubmit(\"login\", {\n          email: \"email is required\"\n        });\n        dispatch(action);\n      }\n    });\n  };\n};\nexport const logoutThunkCreator = () => {\n  return dispatch => {\n    authAPI.logout().then(data => {\n      if (data.resultCode === 0) {\n        dispatch(authIsOff());\n      }\n    });\n  };\n};\nexport const getAuthUserData = () => {\n  //надо обязательно оборачивать два раза даже если в первом вызове ничего не передаём, видимо для кол-бэка\n  return dispatch => {\n    // dispatch(toggleIsFetching(true));\n    headerAPI.getHeader().then(data => {\n      dispatch(setAuthData(data));\n\n      if (data.resultCode === 0) {\n        dispatch(toggleIsAuth());\n      }\n    }); // debugger;\n  };\n};\nexport default authReducer;\nexport const authIsOff = () => ({\n  type: \"AUTH-IS-OFF\"\n});\nexport const toggleIsAuth = () => ({\n  type: \"TOGGLE-IS-AUTH\"\n});\nexport const setAuthData = data => ({\n  type: SET_AUTH_DATA,\n  data: data\n});","map":{"version":3,"sources":["/Users/andrejzaharcenko/Desktop/second-network/src/redux/auth-reducer.js"],"names":["authAPI","headerAPI","Redirect","React","dataKey","stopSubmit","SET_AUTH_DATA","initialState","data","isAuth","authReducer","state","action","type","loginThunkCreator","email","password","rememberMe","dispatch","login","then","resultCode","getAuthUserData","logoutThunkCreator","logout","authIsOff","getHeader","setAuthData","toggleIsAuth"],"mappings":"AAAA,SAAQA,OAAR,EAAiBC,SAAjB,QAAiC,YAAjC;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,iCAAtB;AACA,SAAQC,UAAR,QAAyB,YAAzB;AAEA,MAAMC,aAAa,GAAG,eAAtB;AACA,IAAIC,YAAY,GAAE;AACdC,EAAAA,IAAI,EAAC,EADS;AAEdC,EAAAA,MAAM,EAAC;AAFO,CAAlB;;AAIA,IAAKC,WAAW,GAAE,CAACC,KAAK,GAAGJ,YAAT,EAAsBK,MAAtB,KAA+B;AAC7C,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAK,eAAL;AAAqB;AACjB;AACA,eAAO,EAAE,GAAGF,KAAL;AAAYH,UAAAA,IAAI,EAAE,EAAC,GAAGI,MAAM,CAACJ;AAAX;AAAlB,SAAP;AACH;;AACD,SAAK,gBAAL;AAAsB;AAClB;AACA,eAAO,EAAC,GAAGG,KAAJ;AAAWF,UAAAA,MAAM,EAAE;AAAnB,SAAP;AACH;;AACD,SAAK,aAAL;AAAmB;AACf;AACA,eAAO,EAAC,GAAGE,KAAJ;AAAWF,UAAAA,MAAM,EAAE,KAAnB;AAA0BD,UAAAA,IAAI,EAAC;AAA/B,SAAP;AACH;;AACD;AACI,aAAOG,KAAP;AAfR;AAiBH,CAlBD;;AAoBA,OAAO,MAAMG,iBAAiB,GAAE,CAACC,KAAD,EAAQC,QAAR,EAAkBC,UAAU,GAAG,IAA/B,KAAsC;AAClE,SAAOC,QAAD,IAAY;AAEdlB,IAAAA,OAAO,CAACmB,KAAR,CAAcJ,KAAd,EAAoBC,QAApB,EAA6BC,UAA7B,EACKG,IADL,CAEQZ,IAAI,IAAE;AAEF,UAAGA,IAAI,CAACa,UAAL,KAAmB,CAAtB,EAAwB;AACpBH,QAAAA,QAAQ,CAACI,eAAe,EAAhB,CAAR;AACH,OAFD,MAGK;AACD,YAAIV,MAAM,GAAGP,UAAU,CAAC,OAAD,EAAS;AAACU,UAAAA,KAAK,EAAC;AAAP,SAAT,CAAvB;AACAG,QAAAA,QAAQ,CAACN,MAAD,CAAR;AACH;AACJ,KAXT;AAaH,GAfD;AAgBH,CAjBM;AAkBP,OAAO,MAAMW,kBAAkB,GAAE,MAAI;AACjC,SAAOL,QAAD,IAAY;AACdlB,IAAAA,OAAO,CAACwB,MAAR,GACKJ,IADL,CAEQZ,IAAI,IAAE;AACF,UAAGA,IAAI,CAACa,UAAL,KAAmB,CAAtB,EAAwB;AAEpBH,QAAAA,QAAQ,CAACO,SAAS,EAAV,CAAR;AAGH;AACJ,KATT;AAWH,GAZD;AAaH,CAdM;AAgBP,OAAO,MAAMH,eAAe,GAAE,MAAI;AAC9B;AACA,SAAOJ,QAAD,IACN;AAEI;AACAjB,IAAAA,SAAS,CAACyB,SAAV,GACKN,IADL,CACUZ,IAAI,IAAI;AACVU,MAAAA,QAAQ,CAACS,WAAW,CAACnB,IAAD,CAAZ,CAAR;;AACA,UAAGA,IAAI,CAACa,UAAL,KAAmB,CAAtB,EAAwB;AAEpBH,QAAAA,QAAQ,CAACU,YAAY,EAAb,CAAR;AACH;AAEJ,KARL,EAHJ,CAYI;AACH,GAdD;AAeH,CAjBM;AAqBP,eAAelB,WAAf;AACA,OAAO,MAAMe,SAAS,GAAE,OAAK;AAACZ,EAAAA,IAAI,EAAE;AAAP,CAAL,CAAjB;AACP,OAAO,MAAMe,YAAY,GAAE,OAAK;AAACf,EAAAA,IAAI,EAAC;AAAN,CAAL,CAApB;AACP,OAAO,MAAMc,WAAW,GAAGnB,IAAD,KAAS;AAACK,EAAAA,IAAI,EAACP,aAAN;AAAqBE,EAAAA,IAAI,EAACA;AAA1B,CAAT,CAAnB","sourcesContent":["import {authAPI, headerAPI} from \"../api/api\";\nimport {Redirect} from \"react-router-dom\";\nimport React from \"react\";\nimport {dataKey} from \"redux-form/lib/util/eventConsts\";\nimport {stopSubmit} from \"redux-form\";\n\nconst SET_AUTH_DATA = \"SET-AUTH-DATA\";\nlet initialState ={\n    data:{},\n    isAuth:false,\n}\nlet  authReducer =(state = initialState,action)=>{\n    switch (action.type) {\n\n        case \"SET-AUTH-DATA\":{\n            // debugger;\n            return { ...state, data: {...action.data}};\n        }\n        case \"TOGGLE-IS-AUTH\":{\n            // debugger;\n            return {...state, isAuth: true};\n        }\n        case \"AUTH-IS-OFF\":{\n            debugger;\n            return {...state, isAuth: false, data:{}};\n        }\n        default:\n            return state;\n    }\n}\n\nexport const loginThunkCreator =(email, password, rememberMe = true)=>{\n    return(dispatch)=>{\n\n        authAPI.login(email,password,rememberMe)\n            .then(\n                data=>{\n\n                    if(data.resultCode ===0){\n                        dispatch(getAuthUserData());\n                    }\n                    else {\n                        let action = stopSubmit(\"login\",{email:\"email is required\"})\n                        dispatch(action);\n                    }\n                }\n            )\n    }\n}\nexport const logoutThunkCreator =()=>{\n    return(dispatch)=>{\n        authAPI.logout()\n            .then(\n                data=>{\n                    if(data.resultCode ===0){\n\n                        dispatch(authIsOff());\n\n\n                    }\n                }\n            )\n    }\n}\n\nexport const getAuthUserData= ()=>{\n    //надо обязательно оборачивать два раза даже если в первом вызове ничего не передаём, видимо для кол-бэка\n    return(dispatch)=>\n    {\n\n        // dispatch(toggleIsFetching(true));\n        headerAPI.getHeader()\n            .then(data => {\n                dispatch(setAuthData(data));\n                if(data.resultCode ===0){\n\n                    dispatch(toggleIsAuth());\n                }\n\n            })\n        // debugger;\n    }\n}\n\n\n\nexport default authReducer;\nexport const authIsOff =()=>({type: \"AUTH-IS-OFF\"})\nexport const toggleIsAuth =()=>({type:\"TOGGLE-IS-AUTH\" })\nexport const setAuthData =(data)=>({type:SET_AUTH_DATA, data:data})"]},"metadata":{},"sourceType":"module"}