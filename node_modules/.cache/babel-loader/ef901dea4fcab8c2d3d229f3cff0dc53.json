{"ast":null,"code":"var _jsxFileName = \"/Users/andrejzaharcenko/Desktop/second-network/src/components/Users/Paginator.js\";\nimport React, { useState } from \"react\";\nimport s from \"./Users.module.css\";\nimport cn from \"classnames\";\n\nconst Paginator = ({\n  onPageChange,\n  currentPage,\n  totalItemsCount,\n  pageSize,\n  portionSize = 10\n}) => {\n  let pagesCount = Math.ceil(totalItemsCount / pageSize);\n  let pages = [];\n\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n\n  let portionCount = Math.ceil(pagesCount / portionSize);\n  let [portionNumber, setPortionNumber] = useState(1);\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n  let rightPortionPageNumber = portionNumber * portionSize;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: s.paginator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }\n  }, portionNumber > 1 && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setPortionNumber(portionNumber - 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, \"PREV\"), pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber).map(p => {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: cn({\n        [s.selectedPage]: currentPage === p\n      }, s.pageNumber),\n      key: p,\n      onClick: e => {\n        onPageChange(p);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 24\n      }\n    }, p);\n  }), portionCount > portionNumber && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setPortionNumber(portionNumber + 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"NEXT\"));\n};\n\nexport default Paginator;","map":{"version":3,"sources":["/Users/andrejzaharcenko/Desktop/second-network/src/components/Users/Paginator.js"],"names":["React","useState","s","cn","Paginator","onPageChange","currentPage","totalItemsCount","pageSize","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","filter","p","map","selectedPage","pageNumber","e"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,CAAP,MAAc,oBAAd;AACA,OAAOC,EAAP,MAAe,YAAf;;AAEA,MAAMC,SAAS,GAAE,CAAC;AAACC,EAAAA,YAAD;AAAcC,EAAAA,WAAd;AAA0BC,EAAAA,eAA1B;AAA2CC,EAAAA,QAA3C;AAAqDC,EAAAA,WAAW,GAAG;AAAnE,CAAD,KAA2E;AACxF,MAAIC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUL,eAAe,GAAGC,QAA5B,CAAjB;AAEA,MAAIK,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIJ,UAArB,EAAiCI,CAAC,EAAlC,EAAsC;AAClCD,IAAAA,KAAK,CAACE,IAAN,CAAWD,CAAX;AACH;;AAED,MAAIE,YAAY,GAAGL,IAAI,CAACC,IAAL,CAAUF,UAAU,GAAGD,WAAvB,CAAnB;AACA,MAAI,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoCjB,QAAQ,CAAC,CAAD,CAAhD;AACA,MAAIkB,qBAAqB,GAAG,CAACF,aAAa,GAAG,CAAjB,IAAsBR,WAAtB,GAAoC,CAAhE;AACA,MAAIW,sBAAsB,GAAGH,aAAa,GAAGR,WAA7C;AAGA,sBAAO;AAAK,IAAA,SAAS,EAAEP,CAAC,CAACmB,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACDJ,aAAa,GAAG,CAAhB,iBACF;AAAQ,IAAA,OAAO,EAAE,MAAM;AAAEC,MAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AAAqC,KAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFG,EAIFJ,KAAK,CACDS,MADJ,CACWC,CAAC,IAAIA,CAAC,IAAIJ,qBAAL,IAA8BI,CAAC,IAAEH,sBADjD,EAEII,GAFJ,CAESD,CAAD,IAAO;AACR,wBAAO;AAAM,MAAA,SAAS,EAAGpB,EAAE,CAAC;AACxB,SAACD,CAAC,CAACuB,YAAH,GAAkBnB,WAAW,KAAKiB;AADV,OAAD,EAExBrB,CAAC,CAACwB,UAFsB,CAApB;AAGM,MAAA,GAAG,EAAEH,CAHX;AAIM,MAAA,OAAO,EAAGI,CAAD,IAAO;AACZtB,QAAAA,YAAY,CAACkB,CAAD,CAAZ;AACH,OANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMUA,CANV,CAAP;AAOH,GAVJ,CAJE,EAeDP,YAAY,GAAGC,aAAf,iBACF;AAAQ,IAAA,OAAO,EAAE,MAAM;AAAEC,MAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AAAqC,KAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBG,CAAP;AAoBH,CAlCD;;AAmCA,eAAeb,SAAf","sourcesContent":["import React, {useState} from \"react\";\nimport s from \"./Users.module.css\"\nimport cn from \"classnames\";\n\nconst Paginator =({onPageChange,currentPage,totalItemsCount, pageSize, portionSize = 10})=> {\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\n\n    let pages = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n    }\n\n    let portionCount = Math.ceil(pagesCount / portionSize);\n    let [portionNumber, setPortionNumber] = useState(1);\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n    let rightPortionPageNumber = portionNumber * portionSize;\n\n\n    return <div className={s.paginator}>\n        { portionNumber > 1 &&\n        <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\n\n        {pages\n            .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\n            .map((p) => {\n                return <span className={ cn({\n                    [s.selectedPage]: currentPage === p\n                }, s.pageNumber) }\n                             key={p}\n                             onClick={(e) => {\n                                 onPageChange(p);\n                             }}>{p}</span>\n            })}\n        { portionCount > portionNumber &&\n        <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\n\n\n    </div>\n}\nexport default Paginator;\n"]},"metadata":{},"sourceType":"module"}