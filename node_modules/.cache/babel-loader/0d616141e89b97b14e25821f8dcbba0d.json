{"ast":null,"code":"import { usersAPI } from \"../api/api\";\nlet initialState = {\n  users: [// {id:1, fullName:\"Dimych\", followed:true, status:\"hello world\", location:{city:\"Minsk\", country:\"Belarus\"}},\n    // {id:2, fullName:\"Ivan\", followed:false, status:\"yo yo oy world\", location:{city:\"Kiev\", country:\"Ukraine\"}},\n    // {id:3, fullName:\"Marina\", followed:true, status:\"i'm sexy and i know it\", location:{city:\"Yalta\", country:\"Russia\"}},\n  ],\n  totalCount: 20,\n  pageSize: 5,\n  currentPage: 1,\n  isFetching: false,\n  followingInProgress: []\n};\n\nlet userReducers = (state = initialState, action) => {\n  debugger;\n\n  switch (action.type) {\n    case \"FOLLOW\":\n      {\n        debugger;\n        let newState = { ...state\n        };\n        newState.users = state.users.map(u => {\n          if (u.id === action.userId) {\n            u.followed = true;\n          }\n\n          return u;\n        });\n        return newState;\n      }\n\n    case \"UNFOLLOW\":\n      {\n        debugger;\n        let newState = { ...state\n        };\n        newState.users = state.users.map(u => {\n          if (u.id === action.userId) {\n            u.followed = false;\n          }\n\n          return u;\n        });\n        return newState;\n      }\n\n    case \"SET-USERS\":\n      {\n        debugger;\n        return { ...state,\n          users: [...action.state]\n        };\n      }\n\n    case \"CHANGE-CURRENT-PAGE\":\n      {\n        debugger;\n        let newState = { ...state,\n          currentPage: action.currentPage\n        };\n        return newState;\n      }\n\n    case \"SET-TOTAL-USER-COUNT\":\n      {\n        debugger;\n        let newState = { ...state,\n          totalCount: action.totalCount\n        };\n        return newState;\n      }\n\n    case \"TOGGLE-IS-FETCHING\":\n      {\n        debugger;\n        let newState = { ...state,\n          isFetching: action.isFetchingValue\n        };\n        return newState;\n      }\n\n    case \"TOGGLE-FOLLOWING-IN-PROGRESS\":\n      {\n        debugger;\n        return { ...state,\n          followingInProgress: action.isFetching ? [...state.followingInProgress, action.userId] : state.followingInProgress.filter(id => id !== action.userId)\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducers;\nexport const unFollow = userId => ({\n  type: \"UNFOLLOW\",\n  userId: userId\n});\nexport const follow = userId => ({\n  type: \"FOLLOW\",\n  userId: userId\n});\nexport const setUsers = state => ({\n  type: \"SET-USERS\",\n  state: state\n});\nexport const changeCurrentPage = currentPage => ({\n  type: \"CHANGE-CURRENT-PAGE\",\n  currentPage: currentPage\n});\nexport const setTotalUsersCount = totalCount => ({\n  type: \"SET-TOTAL-USER-COUNT\",\n  totalCount: totalCount\n});\nexport const toggleIsFetching = isFetchingValue => ({\n  type: \"TOGGLE-IS-FETCHING\",\n  isFetchingValue: isFetchingValue\n});\nexport const toggleIFollowingInProgress = (isFetching, userId) => ({\n  type: \"TOGGLE-FOLLOWING-IN-PROGRESS\",\n  isFetching: isFetching,\n  userId: userId\n});\nexport const setUsersThunkCreator = (currentPage, pageSize) => {\n  return dispatch => {\n    dispatch(toggleIsFetching(true));\n    usersAPI.getUsers(currentPage, pageSize).then(data => {\n      dispatch(setUsers(data.items));\n      dispatch(setTotalUsersCount(data.totalCount));\n      dispatch(toggleIsFetching(false));\n    });\n  };\n};\nexport const unfollowUsersThunkCreator = userId => {\n  return dispatch => {\n    dispatch(toggleIFollowingInProgress(true, userId));\n    usersAPI.unfollowUsers(userId).then(data => {\n      debugger;\n\n      if (data.resultCode === 0) {\n        dispatch(unFollow(userId));\n      }\n\n      dispatch(toggleIFollowingInProgress(false, userId));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/andrejzaharcenko/Desktop/second-network/src/redux/users-reducer.js"],"names":["usersAPI","initialState","users","totalCount","pageSize","currentPage","isFetching","followingInProgress","userReducers","state","action","type","newState","map","u","id","userId","followed","isFetchingValue","filter","unFollow","follow","setUsers","changeCurrentPage","setTotalUsersCount","toggleIsFetching","toggleIFollowingInProgress","setUsersThunkCreator","dispatch","getUsers","then","data","items","unfollowUsersThunkCreator","unfollowUsers","resultCode"],"mappings":"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","sourcesContent":["import {usersAPI} from \"../api/api\";\n\nlet initialState ={\n\n    users: [\n        // {id:1, fullName:\"Dimych\", followed:true, status:\"hello world\", location:{city:\"Minsk\", country:\"Belarus\"}},\n        // {id:2, fullName:\"Ivan\", followed:false, status:\"yo yo oy world\", location:{city:\"Kiev\", country:\"Ukraine\"}},\n        // {id:3, fullName:\"Marina\", followed:true, status:\"i'm sexy and i know it\", location:{city:\"Yalta\", country:\"Russia\"}},\n    ],\n    totalCount:20,\n    pageSize:5,\n    currentPage:1,\n    isFetching:false,\n    followingInProgress: [],\n\n}\nlet  userReducers =(state = initialState,action)=>{\n    debugger;\n    switch (action.type) {\n        case \"FOLLOW\":{\n            debugger;\n            let newState = {...state};\n            newState.users = state.users.map(u =>{\n                if(u.id === action.userId){u.followed = true;}\n                return u;\n            });\n            return newState;}\n\n        case \"UNFOLLOW\":{\n            debugger;\n            let newState = {...state};\n            newState.users = state.users.map(u =>{\n                if(u.id === action.userId){u.followed = false;}\n                return u;\n            });\n            return newState;}\n        case \"SET-USERS\":{\n            debugger;\n            return { ...state, users: [...action.state]};\n        }\n        case \"CHANGE-CURRENT-PAGE\":{\n            debugger;\n            let newState = {...state, currentPage: action.currentPage};\n\n            return newState;}\n        case \"SET-TOTAL-USER-COUNT\":{\n            debugger;\n            let newState = {...state, totalCount: action.totalCount};\n\n            return newState;}\n        case \"TOGGLE-IS-FETCHING\":{\n            debugger;\n            let newState = {...state, isFetching: action.isFetchingValue};\n            return newState;}\n        case \"TOGGLE-FOLLOWING-IN-PROGRESS\": {\n            debugger;\n            return {\n                ...state,\n                followingInProgress: action.isFetching ?\n                    [...state.followingInProgress, action.userId] :\n                    state.followingInProgress.filter(id => id !== action.userId)\n            };\n        }\n\n        default:\n            return state;\n    }\n}\nexport default userReducers;\n\n\nexport const unFollow =(userId)=> ({type:\"UNFOLLOW\", userId:userId});\nexport const follow =(userId)=> ({type:\"FOLLOW\", userId:userId});\nexport const setUsers =(state)=>({type:\"SET-USERS\", state:state});\nexport const changeCurrentPage =(currentPage)=>({type:\"CHANGE-CURRENT-PAGE\", currentPage:currentPage});\nexport const setTotalUsersCount =(totalCount)=>({type:\"SET-TOTAL-USER-COUNT\", totalCount:totalCount});\nexport const toggleIsFetching =(isFetchingValue)=>({type:\"TOGGLE-IS-FETCHING\",isFetchingValue:isFetchingValue });\nexport const toggleIFollowingInProgress =(isFetching,userId)=>({type:\"TOGGLE-FOLLOWING-IN-PROGRESS\",isFetching:isFetching , userId:userId});\n\n\n\nexport const setUsersThunkCreator=(currentPage,pageSize)=> {\n    return  (dispatch) => {\n        dispatch(toggleIsFetching(true));\n        usersAPI.getUsers(currentPage, pageSize)\n            .then(data => {\n                dispatch(setUsers(data.items));\n                dispatch(setTotalUsersCount(data.totalCount))\n                dispatch(toggleIsFetching(false));\n            })\n    }\n}\n\nexport const unfollowUsersThunkCreator =(userId)=>{\n    return(dispatch)=>{\n        dispatch(toggleIFollowingInProgress(true, userId))\n        usersAPI.unfollowUsers(userId)\n            .then(data => {\n                debugger;\n                if(data.resultCode === 0){\n                    dispatch(unFollow(userId))\n                }\n                dispatch(toggleIFollowingInProgress(false, userId))\n\n            })\n    }\n}"]},"metadata":{},"sourceType":"module"}