{"ast":null,"code":"var _jsxFileName = \"/Users/andrejzaharcenko/Desktop/second-network/src/components/Dialogs/Dialogs.js\";\nimport React from \"react\";\nimport s from \"./Dialogs.module.css\";\nimport UserItem from \"./UsersItem/UsersItem\";\nimport Message from \"./Messages/Messages\";\n\nconst Dialogs = props => {\n  debugger;\n\n  let sendMessage = () => {\n    alert(messageCurrentValue.current.value);\n  };\n\n  let changedMessage = () => {\n    console.log(\"messagechanged\");\n  };\n\n  let messageCurrentValue = React.createRef();\n  let usersElements = props.dialogsPage.users.map(u => /*#__PURE__*/React.createElement(UserItem, {\n    id: u.id,\n    name: u.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 58\n    }\n  }));\n  {\n    /* обработка массива users с помощью map в jsx итемы*/\n  }\n  let messageElements = props.dialogsPage.messages.map(m => /*#__PURE__*/React.createElement(Message, {\n    message: m.message,\n    id: m.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 62\n    }\n  }));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: s.dialogs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: s.users,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, usersElements), /*#__PURE__*/React.createElement(\"div\", {\n    className: s.messages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, messageElements, /*#__PURE__*/React.createElement(\"div\", {\n    className: s.area,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    ref: messageCurrentValue,\n    onChange: changedMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: sendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 25\n    }\n  }, \"SEND\")))));\n};\n\nexport default Dialogs;","map":{"version":3,"sources":["/Users/andrejzaharcenko/Desktop/second-network/src/components/Dialogs/Dialogs.js"],"names":["React","s","UserItem","Message","Dialogs","props","sendMessage","alert","messageCurrentValue","current","value","changedMessage","console","log","createRef","usersElements","dialogsPage","users","map","u","id","name","messageElements","messages","m","message","dialogs","area"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,sBAAd;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,OAAP,MAAoB,qBAApB;;AAIA,MAAMC,OAAO,GAAGC,KAAD,IAAS;AACpB;;AAEA,MAAIC,WAAW,GAAE,MAAI;AACjBC,IAAAA,KAAK,CAACC,mBAAmB,CAACC,OAApB,CAA4BC,KAA7B,CAAL;AACH,GAFD;;AAGA,MAAIC,cAAc,GAAE,MAAI;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACH,GAFD;;AAIA,MAAIL,mBAAmB,GAAGR,KAAK,CAACc,SAAN,EAA1B;AACA,MAAIC,aAAa,GAAGV,KAAK,CAACW,WAAN,CAAkBC,KAAlB,CAAwBC,GAAxB,CAA4BC,CAAC,iBAAI,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAEA,CAAC,CAACC,EAAhB;AAAoB,IAAA,IAAI,EAAED,CAAC,CAACE,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAjC,CAApB;AAA2F;AAAC;AAAuD;AACnJ,MAAIC,eAAe,GAAGjB,KAAK,CAACW,WAAN,CAAkBO,QAAlB,CAA2BL,GAA3B,CAA+BM,CAAC,iBAAG,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEA,CAAC,CAACC,OAApB;AAA6B,IAAA,EAAE,EAAED,CAAC,CAACJ,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAnC,CAAtB;AACA,sBACI;AAAK,IAAA,SAAS,EAAEnB,CAAC,CAACyB,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAEzB,CAAC,CAACgB,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,aADL,CADJ,eAII;AAAK,IAAA,SAAS,EAAEd,CAAC,CAACsB,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,eADL,eAEI;AAAK,IAAA,SAAS,EAAErB,CAAC,CAAC0B,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAU,IAAA,GAAG,EAAEnB,mBAAf;AAAqC,IAAA,QAAQ,EAAEG,cAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,OAAO,EAAEL,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CAFJ,CAFJ,CAJJ,CADJ;AAiBH,CA9BD;;AA+BA,eAAeF,OAAf","sourcesContent":["import React from \"react\";\nimport s from \"./Dialogs.module.css\"\nimport UserItem from \"./UsersItem/UsersItem\";\nimport Message from \"./Messages/Messages\";\n\n\n\nconst Dialogs =(props)=>{\n    debugger;\n\n    let sendMessage =()=>{\n        alert(messageCurrentValue.current.value);\n    }\n    let changedMessage =()=>{\n        console.log(\"messagechanged\")\n    }\n\n    let messageCurrentValue = React.createRef();\n    let usersElements = props.dialogsPage.users.map(u => <UserItem id={u.id} name={u.name}/>); {/* обработка массива users с помощью map в jsx итемы*/}\n    let messageElements = props.dialogsPage.messages.map(m=> <Message message={m.message} id={m.id}/>);\n    return(\n        <div className={s.dialogs}>\n            <div className={s.users}>\n                {usersElements}\n            </div>\n            <div className={s.messages}>\n                {messageElements}\n                <div className={s.area}>\n                    <textarea ref={messageCurrentValue}  onChange={changedMessage}/>\n                    <div>\n                        <button onClick={sendMessage}>SEND</button>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    )\n}\nexport default Dialogs;"]},"metadata":{},"sourceType":"module"}