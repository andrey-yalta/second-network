{"ast":null,"code":"import { headerAPI } from \"../api/api\";\nconst SET_AUTH_DATA = \"SET-AUTH-DATA\";\nlet initialState = {\n  data: {},\n  isAuth: false\n};\n\nlet authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"SET-AUTH-DATA\":\n      {\n        debugger;\n        return { ...state,\n          data: { ...action.data\n          },\n          isAuth: true\n        };\n      }\n\n    case \"TOGGLE-IS-FETCHING\":\n      {\n        debugger;\n        return { ...state,\n          isAuth: true\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const getAuthUserData = () => {\n  //надо обязательно оборачивать два раза даже если в первом вызове ничего не передаём, видимо для кол-бэка\n  return dispatch => {\n    // dispatch(toggleIsFetching(true));\n    headerAPI.getHeader().then(data => {\n      dispatch(setAuthData(data));\n\n      if (data.resultCode === 0) {\n        dispatch(toggleIsFetching(true));\n      }\n    });\n    debugger;\n  };\n};\nexport default authReducer;\nexport const toggleIsFetching = isFetchingValue => ({\n  type: \"TOGGLE-IS-FETCHING\",\n  isFetchingValue: isFetchingValue\n});\nexport const setAuthData = data => ({\n  type: SET_AUTH_DATA,\n  data: data\n});","map":{"version":3,"sources":["/Users/andrejzaharcenko/Desktop/second-network/src/redux/auth-reducer.js"],"names":["headerAPI","SET_AUTH_DATA","initialState","data","isAuth","authReducer","state","action","type","getAuthUserData","dispatch","getHeader","then","setAuthData","resultCode","toggleIsFetching","isFetchingValue"],"mappings":"AAAA,SAAQA,SAAR,QAAwB,YAAxB;AAEA,MAAMC,aAAa,GAAG,eAAtB;AACA,IAAIC,YAAY,GAAE;AACdC,EAAAA,IAAI,EAAC,EADS;AAEdC,EAAAA,MAAM,EAAC;AAFO,CAAlB;;AAIA,IAAKC,WAAW,GAAE,CAACC,KAAK,GAAGJ,YAAT,EAAsBK,MAAtB,KAA+B;AAC7C,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAK,eAAL;AAAqB;AACjB;AACA,eAAO,EAAE,GAAGF,KAAL;AAAYH,UAAAA,IAAI,EAAE,EAAC,GAAGI,MAAM,CAACJ;AAAX,WAAlB;AAAmCC,UAAAA,MAAM,EAAC;AAA1C,SAAP;AACH;;AACD,SAAK,oBAAL;AAA0B;AACtB;AACA,eAAO,EAAC,GAAGE,KAAJ;AAAWF,UAAAA,MAAM,EAAE;AAAnB,SAAP;AACH;;AACD;AACI,aAAOE,KAAP;AAXR;AAaH,CAdD;;AAgBA,OAAO,MAAMG,eAAe,GAAE,MAAI;AAC9B;AACA,SAAOC,QAAD,IACN;AACI;AACAV,IAAAA,SAAS,CAACW,SAAV,GACKC,IADL,CACUT,IAAI,IAAI;AACVO,MAAAA,QAAQ,CAACG,WAAW,CAACV,IAAD,CAAZ,CAAR;;AACA,UAAGA,IAAI,CAACW,UAAL,KAAmB,CAAtB,EAAwB;AACpBJ,QAAAA,QAAQ,CAACK,gBAAgB,CAAC,IAAD,CAAjB,CAAR;AACH;AAEJ,KAPL;AAQA;AACH,GAZD;AAaH,CAfM;AAgBP,eAAeV,WAAf;AACA,OAAO,MAAMU,gBAAgB,GAAGC,eAAD,KAAoB;AAACR,EAAAA,IAAI,EAAC,oBAAN;AAA2BQ,EAAAA,eAAe,EAACA;AAA3C,CAApB,CAAxB;AACP,OAAO,MAAMH,WAAW,GAAGV,IAAD,KAAS;AAACK,EAAAA,IAAI,EAACP,aAAN;AAAqBE,EAAAA,IAAI,EAACA;AAA1B,CAAT,CAAnB","sourcesContent":["import {headerAPI} from \"../api/api\";\n\nconst SET_AUTH_DATA = \"SET-AUTH-DATA\";\nlet initialState ={\n    data:{},\n    isAuth:false,\n}\nlet  authReducer =(state = initialState,action)=>{\n    switch (action.type) {\n\n        case \"SET-AUTH-DATA\":{\n            debugger;\n            return { ...state, data: {...action.data},isAuth:true};\n        }\n        case \"TOGGLE-IS-FETCHING\":{\n            debugger;\n            return {...state, isAuth: true};\n        }\n        default:\n            return state;\n    }\n}\n\nexport const getAuthUserData= ()=>{\n    //надо обязательно оборачивать два раза даже если в первом вызове ничего не передаём, видимо для кол-бэка\n    return(dispatch)=>\n    {\n        // dispatch(toggleIsFetching(true));\n        headerAPI.getHeader()\n            .then(data => {\n                dispatch(setAuthData(data));\n                if(data.resultCode ===0){\n                    dispatch(toggleIsFetching(true));\n                }\n\n            })\n        debugger;\n    }\n}\nexport default authReducer;\nexport const toggleIsFetching =(isFetchingValue)=>({type:\"TOGGLE-IS-FETCHING\",isFetchingValue:isFetchingValue })\nexport const setAuthData =(data)=>({type:SET_AUTH_DATA, data:data})"]},"metadata":{},"sourceType":"module"}