{"ast":null,"code":"import { getAuthUserData } from \"./auth-reducer\";\nlet initialState = {\n  initialized: false\n};\n\nlet authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"INITIALIZED-SUCCESS\":\n      {\n        return { ...state,\n          initialized: true\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const initializedSuccess = () => ({\n  type: \"INITIALIZED-SUCCESS\"\n});\nexport const initializeApp = () => dispatch => {\n  let promise = dispatch(getAuthUserData());\n  dispatch(initializedSuccess());\n};","map":{"version":3,"sources":["/Users/andrejzaharcenko/Desktop/second-network/src/redux/app-reducer.js"],"names":["getAuthUserData","initialState","initialized","authReducer","state","action","type","initializedSuccess","initializeApp","dispatch","promise"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,gBAA9B;AAEA,IAAIC,YAAY,GAAE;AACdC,EAAAA,WAAW,EAAE;AADC,CAAlB;;AAIA,IAAKC,WAAW,GAAE,CAACC,KAAK,GAAGH,YAAT,EAAsBI,MAAtB,KAA+B;AAC7C,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAK,qBAAL;AAA2B;AAEvB,eAAO,EAAE,GAAGF,KAAL;AAAYF,UAAAA,WAAW,EAAE;AAAzB,SAAP;AACH;;AAED;AACI,aAAOE,KAAP;AARR;AAUH,CAXD;;AAYA,OAAO,MAAMG,kBAAkB,GAAE,OAAM;AAACD,EAAAA,IAAI,EAAE;AAAP,CAAN,CAA1B;AACP,OAAO,MAAME,aAAa,GAAE,MAAKC,QAAD,IAAY;AACxC,MAAIC,OAAO,GAAGD,QAAQ,CAACT,eAAe,EAAhB,CAAtB;AACAS,EAAAA,QAAQ,CAACF,kBAAkB,EAAnB,CAAR;AACH,CAHM","sourcesContent":["import {getAuthUserData} from \"./auth-reducer\";\n\nlet initialState ={\n    initialized: false,\n}\n\nlet  authReducer =(state = initialState,action)=>{\n    switch (action.type) {\n\n        case \"INITIALIZED-SUCCESS\":{\n\n            return { ...state, initialized: true};\n        }\n\n        default:\n            return state;\n    }\n}\nexport const initializedSuccess =()=> ({type: \"INITIALIZED-SUCCESS\"});\nexport const initializeApp =()=>(dispatch)=>{\n    let promise = dispatch(getAuthUserData());\n    dispatch(initializedSuccess());\n}"]},"metadata":{},"sourceType":"module"}