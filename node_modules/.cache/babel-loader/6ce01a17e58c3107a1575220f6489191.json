{"ast":null,"code":"import profileReducer from \"./profile-reducer\";\nimport dialogsReducer from \"./dialogs-reducer\";\nconst ADD_POST = \"ADD-POST\";\nconst POST_CHANGED = \"POST-CHANGED\";\nconst ADD_MESSAGE = \"ADD-MESSAGE\";\nconst MESSAGE_CHANGED = \"MESSAGE-CHANGED\";\nlet store = {\n  _state: {\n    dialogsPage: {\n      users: [{\n        id: 1,\n        name: \"Dimych\"\n      }, {\n        id: 2,\n        name: \"Ivan\"\n      }, {\n        id: 3,\n        name: \"Sveta\"\n      }, {\n        id: 4,\n        name: \"Olga\"\n      }, {\n        id: 5,\n        name: \"Sasha\"\n      }],\n      messages: [{\n        id: 1,\n        message: \"hello\"\n      }, {\n        id: 2,\n        message: \"WHats up?\"\n      }, {\n        id: 3,\n        message: \"How is your name?\"\n      }, {\n        id: 4,\n        message: \"bla bla bla\"\n      }, {\n        id: 5,\n        message: \"Yo\"\n      }, {\n        id: 6,\n        message: \"Hello from Yata with love\"\n      }],\n      currentValue: \"\"\n    },\n    postPage: {\n      posts: [{\n        text: \"post 1 \",\n        id: 1,\n        like: 12\n      }, {\n        text: \"post 2 \",\n        id: 2,\n        like: 13\n      }, {\n        text: \"post 3 \",\n        id: 3,\n        like: 15\n      }, {\n        text: \"post 4 \",\n        id: 4,\n        like: 2\n      }],\n      currentValue: \"\"\n    }\n  },\n\n  getState() {\n    return this._state;\n  },\n\n  renderEntireTree() {},\n\n  //короче это колбэк, чтобы перерисовывать страницу когда она меняется\n  subscribe(observer) {\n    debugger;\n    this.renderEntireTree = observer;\n  },\n\n  // даннаый метод создан чтобы собрать в нем все методы по работе со стейтом и передавать лишь его а не 100+ методов по отдельности\n  dispatch(action) {\n    debugger;\n    this._state.postPage = profileReducer(this._state.postPage, action);\n    this._state.dialogsPage = dialogsReducer(this._state.dialogsPage, action);\n    this.renderEntireTree();\n  }\n\n};\nexport default store;\nexport const addPostActionCreator = () => ({\n  type: ADD_POST\n});\nexport const postChangedActionCreator = postValue => ({\n  type: POST_CHANGED,\n  value: postValue\n});\nexport const addMessageActionCreator = () => ({\n  type: ADD_MESSAGE\n});\nexport const messageChangedActionCreator = messageValue => ({\n  type: MESSAGE_CHANGED,\n  value: messageValue\n});","map":{"version":3,"sources":["/Users/andrejzaharcenko/Desktop/second-network/src/redux/state.js"],"names":["profileReducer","dialogsReducer","ADD_POST","POST_CHANGED","ADD_MESSAGE","MESSAGE_CHANGED","store","_state","dialogsPage","users","id","name","messages","message","currentValue","postPage","posts","text","like","getState","renderEntireTree","subscribe","observer","dispatch","action","addPostActionCreator","type","postChangedActionCreator","postValue","value","addMessageActionCreator","messageChangedActionCreator","messageValue"],"mappings":"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","sourcesContent":["import profileReducer from \"./profile-reducer\";\nimport dialogsReducer from \"./dialogs-reducer\";\n\nconst ADD_POST = \"ADD-POST\";\nconst POST_CHANGED = \"POST-CHANGED\";\nconst ADD_MESSAGE = \"ADD-MESSAGE\";\nconst MESSAGE_CHANGED = \"MESSAGE-CHANGED\";\nlet store = {\n    _state: {\n        dialogsPage: {\n            users: [\n                {id: 1, name: \"Dimych\"},\n                {id: 2, name: \"Ivan\"},\n                {id: 3, name: \"Sveta\"},\n                {id: 4, name: \"Olga\"},\n                {id: 5, name: \"Sasha\"}],\n            messages: [\n                {id: 1, message: \"hello\"},\n                {id: 2, message: \"WHats up?\"},\n                {id: 3, message: \"How is your name?\"},\n                {id: 4, message: \"bla bla bla\"},\n                {id: 5, message: \"Yo\"},\n                {id: 6, message: \"Hello from Yata with love\"}\n            ],\n            currentValue:\"\"\n        },\n        postPage: {\n            posts: [\n                {text: \"post 1 \", id: 1, like: 12},\n                {text: \"post 2 \", id: 2, like: 13},\n                {text: \"post 3 \", id: 3, like: 15},\n                {text: \"post 4 \", id: 4, like: 2},\n            ],\n            currentValue: \"\",\n        }\n    },\n    getState(){\n        return this._state;\n    },\n    renderEntireTree() {},\n\n//короче это колбэк, чтобы перерисовывать страницу когда она меняется\n    subscribe(observer) {\n        debugger;\n        this.renderEntireTree = observer;\n    },\n    // даннаый метод создан чтобы собрать в нем все методы по работе со стейтом и передавать лишь его а не 100+ методов по отдельности\n    dispatch(action){\n        debugger;\n        this._state.postPage = profileReducer( this._state.postPage, action);\n        this._state.dialogsPage = dialogsReducer(this._state.dialogsPage, action);\n        this.renderEntireTree();\n    }\n}\nexport default store;\n\nexport const addPostActionCreator =()=> ({type:ADD_POST})\n\nexport const postChangedActionCreator =(postValue)=>({type:POST_CHANGED, value:postValue})\n\nexport const addMessageActionCreator =()=> ({type:ADD_MESSAGE})\n\nexport const messageChangedActionCreator =(messageValue)=>({type:MESSAGE_CHANGED, value:messageValue})"]},"metadata":{},"sourceType":"module"}