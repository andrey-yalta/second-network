{"ast":null,"code":"let initialState = {\n  users: [// {id:1, fullName:\"Dimych\", follow:true, status:\"hello world\", location:{city:\"Minsk\", country:\"Belarus\"}},\n    // {id:2, fullName:\"Ivan\", follow:false, status:\"yo yo oy world\", location:{city:\"Kiev\", country:\"Ukraine\"}},\n    // {id:3, fullName:\"Marina\", follow:true, status:\"i'm sexy and i know it\", location:{city:\"Yalta\", country:\"Russia\"}},\n  ],\n  totalCount: 20,\n  pageSize: 5,\n  currentPage: 1,\n  isFetching: false\n};\n\nlet userReducers = (state = initialState, action) => {\n  debugger;\n\n  switch (action.type) {\n    case \"FOLLOW\":\n      {\n        debugger;\n        let newState = { ...state\n        };\n        newState.users = state.users.map(u => {\n          if (u.id === action.userId) {\n            u.follow = true;\n          }\n\n          return u;\n        });\n        return newState;\n      }\n\n    case \"UNFOLLOW\":\n      {\n        debugger;\n        let newState = { ...state\n        };\n        newState.users = state.users.map(u => {\n          if (u.id === action.userId) {\n            u.follow = false;\n          }\n\n          return u;\n        });\n        return newState;\n      }\n\n    case \"SET-USERS\":\n      {\n        debugger;\n        return { ...state,\n          users: [...action.state]\n        };\n      }\n\n    case \"CHANGE-CURRENT-PAGE\":\n      {\n        debugger;\n        let newState = { ...state,\n          currentPage: action.currentPage\n        };\n        return newState;\n      }\n\n    case \"SET-TOTAL-USER-COUNT\":\n      {\n        debugger;\n        let newState = { ...state,\n          totalCount: action.totalCount\n        };\n        return newState;\n      }\n\n    case \"TOGGLE-IS-FETCHING\":\n      {\n        debugger;\n        let newState = { ...state,\n          isFetching: action.isFetchingValue\n        };\n        return newState;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducers;\nexport const unFollowAC = userId => ({\n  type: \"UNFOLLOW\",\n  userId: userId\n});\nexport const followAC = userId => ({\n  type: \"FOLLOW\",\n  userId: userId\n});\nexport const setUsersAC = state => ({\n  type: \"SET-USERS\",\n  state: state\n});\nexport const changeCurrentPageAC = currentPage => ({\n  type: \"CHANGE-CURRENT-PAGE\",\n  currentPage: currentPage\n});\nexport const setTotalUsersCountAC = totalCount => ({\n  type: \"SET-TOTAL-USER-COUNT\",\n  totalCount: totalCount\n});\nexport const toggleIsFetchingAC = isFetchingValue => ({\n  type: \"TOGGLE-IS-FETCHING\",\n  isFetchingValue: isFetchingValue\n});","map":{"version":3,"sources":["/Users/andrejzaharcenko/Desktop/second-network/src/redux/users-reducer.js"],"names":["initialState","users","totalCount","pageSize","currentPage","isFetching","userReducers","state","action","type","newState","map","u","id","userId","follow","isFetchingValue","unFollowAC","followAC","setUsersAC","changeCurrentPageAC","setTotalUsersCountAC","toggleIsFetchingAC"],"mappings":"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","sourcesContent":["\nlet initialState ={\n\n    users: [\n        // {id:1, fullName:\"Dimych\", follow:true, status:\"hello world\", location:{city:\"Minsk\", country:\"Belarus\"}},\n        // {id:2, fullName:\"Ivan\", follow:false, status:\"yo yo oy world\", location:{city:\"Kiev\", country:\"Ukraine\"}},\n        // {id:3, fullName:\"Marina\", follow:true, status:\"i'm sexy and i know it\", location:{city:\"Yalta\", country:\"Russia\"}},\n    ],\n    totalCount:20,\n    pageSize:5,\n    currentPage:1,\n    isFetching:false,\n\n}\nlet  userReducers =(state = initialState,action)=>{\n    debugger;\n    switch (action.type) {\n        case \"FOLLOW\":{\n            debugger;\n            let newState = {...state};\n            newState.users = state.users.map(u =>{\n                if(u.id === action.userId){u.follow = true;}\n                return u;\n            });\n            return newState;}\n\n        case \"UNFOLLOW\":{\n            debugger;\n            let newState = {...state};\n            newState.users = state.users.map(u =>{\n                if(u.id === action.userId){u.follow = false;}\n                return u;\n            });\n            return newState;}\n        case \"SET-USERS\":{\n            debugger;\n            return { ...state, users: [...action.state]};\n        }\n        case \"CHANGE-CURRENT-PAGE\":{\n            debugger;\n            let newState = {...state, currentPage: action.currentPage};\n\n            return newState;}\n        case \"SET-TOTAL-USER-COUNT\":{\n            debugger;\n            let newState = {...state, totalCount: action.totalCount};\n\n            return newState;}\n        case \"TOGGLE-IS-FETCHING\":{\n            debugger;\n            let newState = {...state, isFetching: action.isFetchingValue};\n\n            return newState;}\n        default:\n            return state;\n    }\n}\nexport default userReducers;\n\n\nexport const unFollowAC =(userId)=> ({type:\"UNFOLLOW\", userId:userId});\nexport const followAC =(userId)=> ({type:\"FOLLOW\", userId:userId});\nexport const setUsersAC =(state)=>({type:\"SET-USERS\", state:state});\nexport const changeCurrentPageAC =(currentPage)=>({type:\"CHANGE-CURRENT-PAGE\", currentPage:currentPage});\nexport const setTotalUsersCountAC =(totalCount)=>({type:\"SET-TOTAL-USER-COUNT\", totalCount:totalCount});\nexport const toggleIsFetchingAC =(isFetchingValue)=>({type:\"TOGGLE-IS-FETCHING\",isFetchingValue:isFetchingValue })"]},"metadata":{},"sourceType":"module"}