{"ast":null,"code":"var _jsxFileName = \"/Users/andrejzaharcenko/Desktop/second-network/src/index.js\";\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./redux/redux-store\";\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\n\nlet renderEntireTree = state => {\n  // debugger;\n  ReactDOM.render( /*#__PURE__*/React.createElement(React.StrictMode, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Provider, {\n    store: store,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(App, {\n    state: state,\n    dispatch: store.dispatch.bind(store),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }))), document.getElementById('root'));\n};\n\nrenderEntireTree(store.getState()); //короче это колбэк, чтобы перерисовывать страницу когда она меняется\n\nstore.subscribe(() => {\n  let state = store.getState();\n  renderEntireTree(state);\n});\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/andrejzaharcenko/Desktop/second-network/src/index.js"],"names":["serviceWorker","store","ReactDOM","React","App","Provider","renderEntireTree","state","render","dispatch","bind","document","getElementById","getState","subscribe","unregister"],"mappings":";AAAA,OAAO,KAAKA,aAAZ,MAA+B,iBAA/B;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAAQC,QAAR,QAAuB,aAAvB;;AAEA,IAAIC,gBAAgB,GAAGC,KAAD,IAAS;AAC3B;AACAL,EAAAA,QAAQ,CAACM,MAAT,eACI,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEP,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGA,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAGM,KAAb;AAAoB,IAAA,QAAQ,EAAEN,KAAK,CAACQ,QAAN,CAAeC,IAAf,CAAoBT,KAApB,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHA,CADJ,CADJ,EAQIU,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CARJ;AAWH,CAbD;;AAcAN,gBAAgB,CAACL,KAAK,CAACY,QAAN,EAAD,CAAhB,C,CAIA;;AACAZ,KAAK,CAACa,SAAN,CAAgB,MAAI;AAChB,MAAIP,KAAK,GAAGN,KAAK,CAACY,QAAN,EAAZ;AACAP,EAAAA,gBAAgB,CAACC,KAAD,CAAhB;AACH,CAHD;AAIAP,aAAa,CAACe,UAAd","sourcesContent":["import * as serviceWorker from './serviceWorker';\nimport store from \"./redux/redux-store\";\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport App from \"./App\";\nimport {Provider} from \"react-redux\";\n\nlet renderEntireTree =(state)=>{\n    // debugger;\n    ReactDOM.render(\n        <React.StrictMode>\n            <Provider store={store} >\n            {/* функция bind нужна чтобы при вызове методов эти методы ссылались на свой родно обьект в котором они созданы\n            либо на тот обьект, с которым они забайдины*/}\n            <App state ={state} dispatch={store.dispatch.bind(store)}/>\n            </Provider>\n        </React.StrictMode>,\n        document.getElementById('root')\n\n    );\n}\nrenderEntireTree(store.getState());\n\n\n\n//короче это колбэк, чтобы перерисовывать страницу когда она меняется\nstore.subscribe(()=>{\n    let state = store.getState();\n    renderEntireTree(state);\n});\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}