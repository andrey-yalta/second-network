{"ast":null,"code":"var _jsxFileName = \"/Users/andrejzaharcenko/Desktop/second-network/src/components/Profile/Posts/PostsContainer.js\";\nimport React from \"react\";\nimport s from \"./Posts.module.css\";\nimport Post from \"./Post/Post\";\nimport { addPostActionCreator, postChangedActionCreator } from \"../../../redux/state\";\nimport Posts from \"./Posts\";\nimport { connect } from \"react-redux\"; // const PostsContainer =(props)=>{\n//\n//     let addPost = ()=>{\n//         props.dispatch(addPostActionCreator())\n//     }\n//     let postChanged =(postValue)=>{\n//         props.dispatch(postChangedActionCreator(postValue));\n//     }\n//     debugger;\n//     let postsElements = props.posts.map(p=> <Post key={p.id} message={p.text} id={p.id} like={p.like}/>);\n//\n//     return(\n//\n//         <Posts onPostChanged={postChanged} addPost={addPost} postsElements={postsElements} postCurrentValue={props.postCurrentValue}/>\n//     )\n// }\n// export default PostsContainer;\n\nlet mapStateToProps = state => {\n  debugger;\n  let postsElements = state.profilePage.posts.map(p => /*#__PURE__*/React.createElement(Post, {\n    key: p.id,\n    message: p.text,\n    id: p.id,\n    like: p.like,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 57\n    }\n  }));\n  return {\n    postsElements: postsElements,\n    postCurrentValue: state.profilePage.postCurrentValue\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    addPost: () => {\n      dispatch(addPostActionCreator());\n    },\n    onPostChanged: postValue => {\n      dispatch(postChangedActionCreator(postValue));\n    }\n  };\n};\n\nconst dialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts);\nexport default dialogsContainer;","map":{"version":3,"sources":["/Users/andrejzaharcenko/Desktop/second-network/src/components/Profile/Posts/PostsContainer.js"],"names":["React","s","Post","addPostActionCreator","postChangedActionCreator","Posts","connect","mapStateToProps","state","postsElements","profilePage","posts","map","p","id","text","like","postCurrentValue","mapDispatchToProps","dispatch","addPost","onPostChanged","postValue","dialogsContainer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,oBAAd;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAAQC,oBAAR,EAA8BC,wBAA9B,QAA6D,sBAA7D;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,eAAe,GAAGC,KAAD,IAAS;AAC1B;AACA,MAAIC,aAAa,GAAGD,KAAK,CAACE,WAAN,CAAkBC,KAAlB,CAAwBC,GAAxB,CAA4BC,CAAC,iBAAG,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,CAAC,CAACC,EAAb;AAAiB,IAAA,OAAO,EAAED,CAAC,CAACE,IAA5B;AAAkC,IAAA,EAAE,EAAEF,CAAC,CAACC,EAAxC;AAA4C,IAAA,IAAI,EAAED,CAAC,CAACG,IAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhC,CAApB;AACA,SAAM;AACFP,IAAAA,aAAa,EAAEA,aADb;AAEFQ,IAAAA,gBAAgB,EAAET,KAAK,CAACE,WAAN,CAAkBO;AAFlC,GAAN;AAIH,CAPD;;AAQA,IAAIC,kBAAkB,GAAGC,QAAD,IAAa;AACjC,SAAM;AACFC,IAAAA,OAAO,EAAE,MAAK;AAACD,MAAAA,QAAQ,CAAChB,oBAAoB,EAArB,CAAR;AAAiC,KAD9C;AAEFkB,IAAAA,aAAa,EAAGC,SAAD,IAAc;AAACH,MAAAA,QAAQ,CAACf,wBAAwB,CAACkB,SAAD,CAAzB,CAAR;AAA8C;AAF1E,GAAN;AAIH,CALD;;AAOA,MAAMC,gBAAgB,GAAGjB,OAAO,CAACC,eAAD,EAAiBW,kBAAjB,CAAP,CAA4Cb,KAA5C,CAAzB;AACA,eAAekB,gBAAf","sourcesContent":["import React from \"react\";\nimport s from \"./Posts.module.css\"\nimport Post from \"./Post/Post\";\nimport {addPostActionCreator, postChangedActionCreator} from \"../../../redux/state\";\nimport Posts from \"./Posts\";\nimport {connect} from \"react-redux\";\n\n// const PostsContainer =(props)=>{\n//\n//     let addPost = ()=>{\n//         props.dispatch(addPostActionCreator())\n//     }\n//     let postChanged =(postValue)=>{\n//         props.dispatch(postChangedActionCreator(postValue));\n//     }\n//     debugger;\n//     let postsElements = props.posts.map(p=> <Post key={p.id} message={p.text} id={p.id} like={p.like}/>);\n//\n//     return(\n//\n//         <Posts onPostChanged={postChanged} addPost={addPost} postsElements={postsElements} postCurrentValue={props.postCurrentValue}/>\n//     )\n// }\n// export default PostsContainer;\nlet mapStateToProps =(state)=>{\n    debugger;\n    let postsElements = state.profilePage.posts.map(p=> <Post key={p.id} message={p.text} id={p.id} like={p.like}/>);\n    return{\n        postsElements: postsElements,\n        postCurrentValue: state.profilePage.postCurrentValue,\n    }\n}\nlet mapDispatchToProps =(dispatch) =>{\n    return{\n        addPost: () =>{dispatch(addPostActionCreator())} ,\n        onPostChanged: (postValue) =>{dispatch(postChangedActionCreator(postValue))},\n    }\n}\n\nconst dialogsContainer = connect(mapStateToProps,mapDispatchToProps)(Posts);\nexport default dialogsContainer;"]},"metadata":{},"sourceType":"module"}