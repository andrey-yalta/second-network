{"ast":null,"code":"let initialState = {// users: [\n  //     {id:1, fullName:\"Dimych\", follow:true, status:\"hello world\", location:{city:\"Minsk\", country:\"Belarus\"}},\n  //     {id:2, fullName:\"Ivan\", follow:false, status:\"yo yo oy world\", location:{city:\"Kiev\", country:\"Ukraine\"}},\n  //     {id:3, fullName:\"Marina\", follow:true, status:\"i'm sexy and i know it\", location:{city:\"Yalta\", country:\"Russia\"}},\n  // ]\n};\n\nlet userReducers = (state = initialState, action) => {\n  debugger;\n\n  switch (action.type) {\n    case \"FOLLOW\":\n      {\n        debugger;\n        let newState = { ...state\n        };\n        newState.users = state.users.map(u => {\n          if (u.id === action.userId) {\n            u.follow = true;\n          }\n\n          return u;\n        });\n        return newState;\n      }\n\n    case \"UNFOLLOW\":\n      {\n        debugger;\n        let newState = { ...state\n        };\n        newState.users = state.users.map(u => {\n          if (u.id === action.userId) {\n            u.follow = false;\n          }\n\n          return u;\n        });\n        return newState;\n      }\n\n    case \"SET-USERS\":\n      {\n        return { ...state,\n          users: [...state, action.state]\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducers;\nexport const unFollowAC = userId => ({\n  type: \"UNFOLLOW\",\n  userId: userId\n});\nexport const followAC = userId => ({\n  type: \"FOLLOW\",\n  userId: userId\n});\nexport const setUsersAC = state => ({\n  type: \"SET-USERS\",\n  value: state\n});","map":{"version":3,"sources":["/Users/andrejzaharcenko/Desktop/second-network/src/redux/users-reducer.js"],"names":["initialState","userReducers","state","action","type","newState","users","map","u","id","userId","follow","unFollowAC","followAC","setUsersAC","value"],"mappings":"AACA,IAAIA,YAAY,GAAE,CAEd;AACA;AACA;AACA;AACA;AANc,CAAlB;;AASA,IAAKC,YAAY,GAAE,CAACC,KAAK,GAAGF,YAAT,EAAsBG,MAAtB,KAA+B;AAC9C;;AACA,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,QAAL;AAAc;AACV;AACA,YAAIC,QAAQ,GAAG,EAAC,GAAGH;AAAJ,SAAf;AACAG,QAAAA,QAAQ,CAACC,KAAT,GAAiBJ,KAAK,CAACI,KAAN,CAAYC,GAAZ,CAAgBC,CAAC,IAAG;AACjC,cAAGA,CAAC,CAACC,EAAF,KAASN,MAAM,CAACO,MAAnB,EAA0B;AAACF,YAAAA,CAAC,CAACG,MAAF,GAAW,IAAX;AAAiB;;AAC5C,iBAAOH,CAAP;AACH,SAHgB,CAAjB;AAIA,eAAOH,QAAP;AAAiB;;AAErB,SAAK,UAAL;AAAgB;AACZ;AACA,YAAIA,QAAQ,GAAG,EAAC,GAAGH;AAAJ,SAAf;AACAG,QAAAA,QAAQ,CAACC,KAAT,GAAiBJ,KAAK,CAACI,KAAN,CAAYC,GAAZ,CAAgBC,CAAC,IAAG;AACjC,cAAGA,CAAC,CAACC,EAAF,KAASN,MAAM,CAACO,MAAnB,EAA0B;AAACF,YAAAA,CAAC,CAACG,MAAF,GAAW,KAAX;AAAkB;;AAC7C,iBAAOH,CAAP;AACH,SAHgB,CAAjB;AAIA,eAAOH,QAAP;AAAiB;;AACrB,SAAK,WAAL;AAAiB;AAEb,eAAO,EAAE,GAAGH,KAAL;AAAYI,UAAAA,KAAK,EAAC,CAAC,GAAGJ,KAAJ,EAAWC,MAAM,CAACD,KAAlB;AAAlB,SAAP;AACH;;AACD;AACI,aAAOA,KAAP;AAvBR;AAyBH,CA3BD;;AA4BA,eAAeD,YAAf;AAGA,OAAO,MAAMW,UAAU,GAAGF,MAAD,KAAY;AAACN,EAAAA,IAAI,EAAC,UAAN;AAAkBM,EAAAA,MAAM,EAACA;AAAzB,CAAZ,CAAlB;AACP,OAAO,MAAMG,QAAQ,GAAGH,MAAD,KAAY;AAACN,EAAAA,IAAI,EAAC,QAAN;AAAgBM,EAAAA,MAAM,EAACA;AAAvB,CAAZ,CAAhB;AACP,OAAO,MAAMI,UAAU,GAAGZ,KAAD,KAAU;AAACE,EAAAA,IAAI,EAAC,WAAN;AAAmBW,EAAAA,KAAK,EAACb;AAAzB,CAAV,CAAlB","sourcesContent":["\nlet initialState ={\n\n    // users: [\n    //     {id:1, fullName:\"Dimych\", follow:true, status:\"hello world\", location:{city:\"Minsk\", country:\"Belarus\"}},\n    //     {id:2, fullName:\"Ivan\", follow:false, status:\"yo yo oy world\", location:{city:\"Kiev\", country:\"Ukraine\"}},\n    //     {id:3, fullName:\"Marina\", follow:true, status:\"i'm sexy and i know it\", location:{city:\"Yalta\", country:\"Russia\"}},\n    // ]\n\n}\nlet  userReducers =(state = initialState,action)=>{\n    debugger;\n    switch (action.type) {\n        case \"FOLLOW\":{\n            debugger;\n            let newState = {...state};\n            newState.users = state.users.map(u =>{\n                if(u.id === action.userId){u.follow = true;}\n                return u;\n            });\n            return newState;}\n\n        case \"UNFOLLOW\":{\n            debugger;\n            let newState = {...state};\n            newState.users = state.users.map(u =>{\n                if(u.id === action.userId){u.follow = false;}\n                return u;\n            });\n            return newState;}\n        case \"SET-USERS\":{\n\n            return { ...state, users:[...state, action.state]};\n        }\n        default:\n            return state;\n    }\n}\nexport default userReducers;\n\n\nexport const unFollowAC =(userId)=> ({type:\"UNFOLLOW\", userId:userId});\nexport const followAC =(userId)=> ({type:\"FOLLOW\", userId:userId});\nexport const setUsersAC =(state)=>({type:\"SET-USERS\", value:state});\n"]},"metadata":{},"sourceType":"module"}