{"ast":null,"code":"var _jsxFileName = \"/Users/andrejzaharcenko/Desktop/second-network/src/components/Users/UsersAPIContainer.js\";\nimport React from \"react\";\nimport s from \"./Users.module.css\";\nimport userIcon from \"./../../common/img/userIcon.png\";\nimport * as axios from \"axios\";\nimport Users from \"./Users\";\nimport PreloaderImg from \"../../common/img/circles.svg\";\nimport { toggleIsFetching } from \"../../redux/users-reducer\";\nimport { usersAPI } from \"../../api/api\";\n\nclass UsersAPIContainer extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    debugger;\n    this.props.toggleIsFetching(true);\n    usersAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data => {\n      this.props.setUsers(data.data.items);\n      this.props.setTotalUsersCount(data.data.totalCount);\n      this.props.toggleIsFetching(false);\n    });\n    debugger;\n  } //в компоненте снизу можно обращатся к функциям через this напрямую, потому что в рендере Users мы раскукожили props\n\n\n  onPageChange(p) {\n    this.changeCurrentPage(p);\n    this.toggleIsFetching(true);\n    debugger;\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${p}&count=${this.pageSize}`, {\n      withCredentials: true\n    }).then(response => {\n      this.setUsers(response.data.items);\n      this.toggleIsFetching(false);\n    });\n    debugger;\n  }\n\n  paginator() {}\n\n  render() {\n    let pageCount = this.props.totalCount / this.props.pageSize;\n    let pages = [];\n    {\n      /*захардкодил число страниц - потом надо будет сделать нормально*/\n    }\n\n    for (let i = 1; i < 40; i++) {\n      pages.push(i);\n    }\n\n    debugger;\n\n    if (this.props.isFetching) {\n      console.log(\"fetching true\");\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }\n      }, \"Loading... \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(\"img\", {\n        className: s.preloader,\n        src: PreloaderImg,\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 42\n        }\n      }));\n    } else {\n      console.log(\"fetching false\");\n      return /*#__PURE__*/React.createElement(Users, Object.assign({\n        pages: pages\n      }, this.props, {\n        onPageChange: this.onPageChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }\n      }));\n    }\n  }\n\n}\n\nexport default UsersAPIContainer;","map":{"version":3,"sources":["/Users/andrejzaharcenko/Desktop/second-network/src/components/Users/UsersAPIContainer.js"],"names":["React","s","userIcon","axios","Users","toggleIsFetching","usersAPI","UsersAPIContainer","Component","constructor","props","componentDidMount","getUsers","currentPage","pageSize","then","data","setUsers","items","setTotalUsersCount","totalCount","onPageChange","p","changeCurrentPage","get","withCredentials","response","paginator","render","pageCount","pages","i","push","isFetching","console","log","preloader","PreloaderImg"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,oBAAd;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,SAAQC,gBAAR,QAA+B,2BAA/B;AACA,SAAQC,QAAR,QAAuB,eAAvB;;AAGA,MAAMC,iBAAN,SAAgCP,KAAK,CAACQ,SAAtC,CAAgD;AAC5CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB;AACA,SAAKD,KAAL,CAAWL,gBAAX,CAA4B,IAA5B;AACAC,IAAAA,QAAQ,CAACM,QAAT,CAAkB,KAAKF,KAAL,CAAWG,WAA7B,EAA0C,KAAKH,KAAL,CAAWI,QAArD,EACKC,IADL,CACUC,IAAI,IAAI;AACV,WAAKN,KAAL,CAAWO,QAAX,CAAoBD,IAAI,CAACA,IAAL,CAAUE,KAA9B;AACA,WAAKR,KAAL,CAAWS,kBAAX,CAA8BH,IAAI,CAACA,IAAL,CAAUI,UAAxC;AACA,WAAKV,KAAL,CAAWL,gBAAX,CAA4B,KAA5B;AACH,KALL;AAMA;AACH,GAf2C,CAiB5C;;;AACAgB,EAAAA,YAAY,CAACC,CAAD,EAAI;AACZ,SAAKC,iBAAL,CAAuBD,CAAvB;AACA,SAAKjB,gBAAL,CAAsB,IAAtB;AACA;AACAF,IAAAA,KAAK,CAACqB,GAAN,CAAW,2DAA0DF,CAAE,UAAS,KAAKR,QAAS,EAA9F,EACI;AAACW,MAAAA,eAAe,EAAC;AAAjB,KADJ,EAEKV,IAFL,CAEUW,QAAQ,IAAI;AACd,WAAKT,QAAL,CAAcS,QAAQ,CAACV,IAAT,CAAcE,KAA5B;AACA,WAAKb,gBAAL,CAAsB,KAAtB;AACH,KALL;AAMA;AACH;;AAEDsB,EAAAA,SAAS,GAAG,CACX;;AAEDC,EAAAA,MAAM,GAAG;AACL,QAAIC,SAAS,GAAG,KAAKnB,KAAL,CAAWU,UAAX,GAAwB,KAAKV,KAAL,CAAWI,QAAnD;AACA,QAAIgB,KAAK,GAAG,EAAZ;AACA;AAAC;AACA;;AACD,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AACzBD,MAAAA,KAAK,CAACE,IAAN,CAAWD,CAAX;AACH;;AACD;;AACA,QAAI,KAAKrB,KAAL,CAAWuB,UAAf,EAA2B;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,0BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhB,eAAqB;AAAK,QAAA,SAAS,EAAElC,CAAC,CAACmC,SAAlB;AAA6B,QAAA,GAAG,EAAEC,YAAlC;AAAgD,QAAA,GAAG,EAAC,EAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAArB,CAAR;AACH,KAHD,MAGO;AACHH,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AAEA,0BAEI,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAEL;AAAd,SAAyB,KAAKpB,KAA9B;AAAqC,QAAA,YAAY,EAAE,KAAKW,YAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFJ;AAIH;AACJ;;AAtD2C;;AAyDhD,eAAed,iBAAf","sourcesContent":["import React from \"react\";\nimport s from \"./Users.module.css\"\nimport userIcon from \"./../../common/img/userIcon.png\"\nimport * as axios from \"axios\"\nimport Users from \"./Users\";\nimport PreloaderImg from \"../../common/img/circles.svg\";\nimport {toggleIsFetching} from \"../../redux/users-reducer\";\nimport {usersAPI} from \"../../api/api\";\n\n\nclass UsersAPIContainer extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        debugger;\n        this.props.toggleIsFetching(true);\n        usersAPI.getUsers(this.props.currentPage, this.props.pageSize)\n            .then(data => {\n                this.props.setUsers(data.data.items);\n                this.props.setTotalUsersCount(data.data.totalCount)\n                this.props.toggleIsFetching(false);\n            })\n        debugger;\n    }\n\n    //в компоненте снизу можно обращатся к функциям через this напрямую, потому что в рендере Users мы раскукожили props\n    onPageChange(p) {\n        this.changeCurrentPage(p)\n        this.toggleIsFetching(true);\n        debugger;\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${p}&count=${this.pageSize}`,\n            {withCredentials:true})\n            .then(response => {\n                this.setUsers(response.data.items)\n                this.toggleIsFetching(false);\n            })\n        debugger;\n    }\n\n    paginator() {\n    }\n\n    render() {\n        let pageCount = this.props.totalCount / this.props.pageSize\n        let pages = [];\n        {/*захардкодил число страниц - потом надо будет сделать нормально*/\n        }\n        for (let i = 1; i < 40; i++) {\n            pages.push(i);\n        }\n        debugger;\n        if (this.props.isFetching) {\n            console.log(\"fetching true\")\n            return (<div>Loading... <br/><img className={s.preloader} src={PreloaderImg} alt=\"\"/></div>)\n        } else {\n            console.log(\"fetching false\");\n\n            return (\n\n                <Users pages={pages} {...this.props} onPageChange={this.onPageChange}/>\n            )\n        }\n    }\n}\n\nexport default UsersAPIContainer;"]},"metadata":{},"sourceType":"module"}