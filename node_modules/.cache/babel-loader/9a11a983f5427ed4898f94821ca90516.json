{"ast":null,"code":"var _jsxFileName = \"/Users/andrejzaharcenko/Desktop/second-network/src/components/Users/UsersAPIContainer.js\";\nimport React from \"react\";\nimport s from \"./Users.module.css\";\nimport userIcon from \"./../../common/img/userIcon.png\";\nimport * as axios from \"axios\";\nimport Users from \"./Users\";\n\nclass UsersAPIContainer extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    debugger;\n    this.props.toogleIsFetching(true);\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\n      this.props.setUsers(response.data.items);\n      this.props.setTotalUsersCount(response.data.totalCount);\n      this.props.toogleIsFetching(false);\n    });\n    debugger;\n  }\n\n  onPageChange(p) {\n    this.props.changeCurrentPage(p);\n    this.props.toogleIsFetching(true);\n    debugger;\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${p}&count=${this.props.pageSize}`).then(response => {\n      this.props.setUsers(response.data.items);\n      this.props.toogleIsFetching(false);\n    });\n    debugger;\n  }\n\n  paginator() {}\n\n  render() {\n    let pageCount = this.props.totalCount / this.props.pageSize;\n    let pages = [];\n    {\n      /*захардкодил число страниц - потом надо будет сделать нормально*/\n    }\n\n    for (let i = 1; i < 40; i++) {\n      pages.push(i);\n    }\n\n    return /*#__PURE__*/React.createElement(Users, Object.assign({\n      pages: pages\n    }, this.props, {\n      onPageChange: this.onPageChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nexport default UsersAPIContainer;","map":{"version":3,"sources":["/Users/andrejzaharcenko/Desktop/second-network/src/components/Users/UsersAPIContainer.js"],"names":["React","s","userIcon","axios","Users","UsersAPIContainer","Component","constructor","props","componentDidMount","toogleIsFetching","get","currentPage","pageSize","then","response","setUsers","data","items","setTotalUsersCount","totalCount","onPageChange","p","changeCurrentPage","paginator","render","pageCount","pages","i","push"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,oBAAd;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAGA,MAAMC,iBAAN,SAAgCL,KAAK,CAACM,SAAtC,CAAgD;AAC5CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB;AACA,SAAKD,KAAL,CAAWE,gBAAX,CAA4B,IAA5B;AACAP,IAAAA,KAAK,CAACQ,GAAN,CAAW,2DAA0D,KAAKH,KAAL,CAAWI,WAAY,UAAS,KAAKJ,KAAL,CAAWK,QAAS,EAAzH,EACKC,IADL,CACUC,QAAQ,IAAI;AACd,WAAKP,KAAL,CAAWQ,QAAX,CAAoBD,QAAQ,CAACE,IAAT,CAAcC,KAAlC;AACA,WAAKV,KAAL,CAAWW,kBAAX,CAA8BJ,QAAQ,CAACE,IAAT,CAAcG,UAA5C;AACA,WAAKZ,KAAL,CAAWE,gBAAX,CAA4B,KAA5B;AACH,KALL;AAMA;AACH;;AAEDW,EAAAA,YAAY,CAACC,CAAD,EAAI;AACZ,SAAKd,KAAL,CAAWe,iBAAX,CAA6BD,CAA7B;AACA,SAAKd,KAAL,CAAWE,gBAAX,CAA4B,IAA5B;AACA;AACAP,IAAAA,KAAK,CAACQ,GAAN,CAAW,2DAA0DW,CAAE,UAAS,KAAKd,KAAL,CAAWK,QAAS,EAApG,EACKC,IADL,CACUC,QAAQ,IAAI;AACd,WAAKP,KAAL,CAAWQ,QAAX,CAAoBD,QAAQ,CAACE,IAAT,CAAcC,KAAlC;AACA,WAAKV,KAAL,CAAWE,gBAAX,CAA4B,KAA5B;AACH,KAJL;AAKA;AACH;;AAEDc,EAAAA,SAAS,GAAG,CACX;;AAEDC,EAAAA,MAAM,GAAG;AACL,QAAIC,SAAS,GAAG,KAAKlB,KAAL,CAAWY,UAAX,GAAwB,KAAKZ,KAAL,CAAWK,QAAnD;AACA,QAAIc,KAAK,GAAG,EAAZ;AACA;AAAC;AACA;;AACD,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AACzBD,MAAAA,KAAK,CAACE,IAAN,CAAWD,CAAX;AACH;;AACD,wBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAED;AAAd,OAAyB,KAAKnB,KAA9B;AAAqC,MAAA,YAAY,EAAE,KAAKa,YAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ;AAGH;;AA3C2C;;AA8ChD,eAAehB,iBAAf","sourcesContent":["import React from \"react\";\nimport s from \"./Users.module.css\"\nimport userIcon from \"./../../common/img/userIcon.png\"\nimport * as axios from \"axios\"\nimport Users from \"./Users\";\n\n\nclass UsersAPIContainer extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        debugger;\n        this.props.toogleIsFetching(true);\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`)\n            .then(response => {\n                this.props.setUsers(response.data.items);\n                this.props.setTotalUsersCount(response.data.totalCount)\n                this.props.toogleIsFetching(false);\n            })\n        debugger;\n    }\n\n    onPageChange(p) {\n        this.props.changeCurrentPage(p)\n        this.props.toogleIsFetching(true);\n        debugger;\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${p}&count=${this.props.pageSize}`)\n            .then(response => {\n                this.props.setUsers(response.data.items)\n                this.props.toogleIsFetching(false);\n            })\n        debugger;\n    }\n\n    paginator() {\n    }\n\n    render() {\n        let pageCount = this.props.totalCount / this.props.pageSize\n        let pages = [];\n        {/*захардкодил число страниц - потом надо будет сделать нормально*/\n        }\n        for (let i = 1; i < 40; i++) {\n            pages.push(i);\n        }\n        return (\n            <Users pages={pages} {...this.props} onPageChange={this.onPageChange} />\n        )\n    }\n}\n\nexport default UsersAPIContainer;"]},"metadata":{},"sourceType":"module"}