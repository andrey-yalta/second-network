{"ast":null,"code":"import { profileAPI } from \"../api/api\";\nconst SET_PROFILE = \"SET-PROFILE\";\nlet initialState = {\n  posts: [{\n    text: \"post 1 \",\n    id: 1,\n    like: 12\n  }, {\n    text: \"post 2 \",\n    id: 2,\n    like: 13\n  }, {\n    text: \"post 3 \",\n    id: 3,\n    like: 15\n  }, {\n    text: \"post 4 \",\n    id: 4,\n    like: 2\n  }],\n  currentValue: \"\",\n  profile: {},\n  isFetching: false\n};\n\nlet profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"ADD-POST\":\n      {\n        let newState = { ...state,\n          posts: [...state.posts]\n        };\n        newState.posts.push({\n          text: state.currentValue,\n          id: 6,\n          like: 2\n        });\n        newState.currentValue = \"\";\n        debugger;\n        return newState;\n      }\n\n    case \"POST-CHANGED\":\n      {\n        debugger;\n        let newState = { ...state\n        };\n        newState.currentValue = action.value;\n        return newState;\n      }\n\n    case \"SET-PROFILE\":\n      {\n        debugger;\n        return { ...state,\n          profile: { ...action.profile\n          }\n        };\n      }\n\n    case \"TOGGLE-IS-FETCHING\":\n      {\n        debugger;\n        return { ...state,\n          isFetching: action.isFetchingValue\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default profileReducer;\nexport const toggleIsFetching = isFetchingValue => ({\n  type: \"TOGGLE-IS-FETCHING\",\n  isFetchingValue: isFetchingValue\n});\nexport const setProfile = profile => ({\n  type: SET_PROFILE,\n  profile: profile\n});\nexport const getUserProfileThunkCreator = userId => {\n  return dispatch => {\n    dispatch(toggleIsFetching(true));\n    profileAPI.getProfile(userId).then(data => {\n      dispatch(setProfile(data));\n      dispatch(toggleIsFetching(false));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/andrejzaharcenko/Desktop/second-network/src/redux/profile-reducer.js"],"names":["profileAPI","SET_PROFILE","initialState","posts","text","id","like","currentValue","profile","isFetching","profileReducer","state","action","type","newState","push","value","isFetchingValue","toggleIsFetching","setProfile","getUserProfileThunkCreator","userId","dispatch","getProfile","then","data"],"mappings":"AAAA,SAAQA,UAAR,QAAyB,YAAzB;AAEA,MAAMC,WAAW,GAAG,aAApB;AACA,IAAIC,YAAY,GAAE;AAEVC,EAAAA,KAAK,EAAE,CACH;AAACC,IAAAA,IAAI,EAAE,SAAP;AAAkBC,IAAAA,EAAE,EAAE,CAAtB;AAAyBC,IAAAA,IAAI,EAAE;AAA/B,GADG,EAEH;AAACF,IAAAA,IAAI,EAAE,SAAP;AAAkBC,IAAAA,EAAE,EAAE,CAAtB;AAAyBC,IAAAA,IAAI,EAAE;AAA/B,GAFG,EAGH;AAACF,IAAAA,IAAI,EAAE,SAAP;AAAkBC,IAAAA,EAAE,EAAE,CAAtB;AAAyBC,IAAAA,IAAI,EAAE;AAA/B,GAHG,EAIH;AAACF,IAAAA,IAAI,EAAE,SAAP;AAAkBC,IAAAA,EAAE,EAAE,CAAtB;AAAyBC,IAAAA,IAAI,EAAE;AAA/B,GAJG,CAFG;AAQVC,EAAAA,YAAY,EAAE,EARJ;AASVC,EAAAA,OAAO,EAAE,EATC;AAUVC,EAAAA,UAAU,EAAC;AAVD,CAAlB;;AAaA,IAAKC,cAAc,GAAE,CAACC,KAAK,GAAGT,YAAT,EAAsBU,MAAtB,KAA+B;AAChD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,UAAL;AAAgB;AAEZ,YAAIC,QAAQ,GAAE,EAAC,GAAGH,KAAJ;AACdR,UAAAA,KAAK,EAAC,CAAC,GAAGQ,KAAK,CAACR,KAAV;AADQ,SAAd;AAGAW,QAAAA,QAAQ,CAACX,KAAT,CAAeY,IAAf,CAAoB;AAACX,UAAAA,IAAI,EAAEO,KAAK,CAACJ,YAAb;AAA4BF,UAAAA,EAAE,EAAE,CAAhC;AAAmCC,UAAAA,IAAI,EAAE;AAAzC,SAApB;AACAQ,QAAAA,QAAQ,CAACP,YAAT,GAAuB,EAAvB;AACA;AACA,eAAOO,QAAP;AAAiB;;AACrB,SAAK,cAAL;AAAoB;AAChB;AACA,YAAIA,QAAQ,GAAG,EAAC,GAAGH;AAAJ,SAAf;AACAG,QAAAA,QAAQ,CAACP,YAAT,GAAwBK,MAAM,CAACI,KAA/B;AACA,eAAOF,QAAP;AAAiB;;AACrB,SAAK,aAAL;AAAmB;AACf;AACA,eAAO,EAAE,GAAGH,KAAL;AAAYH,UAAAA,OAAO,EAAE,EAAC,GAAGI,MAAM,CAACJ;AAAX;AAArB,SAAP;AACH;;AACD,SAAK,oBAAL;AAA0B;AACtB;AACA,eAAO,EAAC,GAAGG,KAAJ;AAAWF,UAAAA,UAAU,EAAEG,MAAM,CAACK;AAA9B,SAAP;AACH;;AACD;AACI,aAAON,KAAP;AAxBR;AA0BH,CA3BD;;AA4BA,eAAeD,cAAf;AACA,OAAO,MAAMQ,gBAAgB,GAAGD,eAAD,KAAoB;AAACJ,EAAAA,IAAI,EAAC,oBAAN;AAA2BI,EAAAA,eAAe,EAACA;AAA3C,CAApB,CAAxB;AACP,OAAO,MAAME,UAAU,GAAGX,OAAD,KAAY;AAACK,EAAAA,IAAI,EAACZ,WAAN;AAAmBO,EAAAA,OAAO,EAACA;AAA3B,CAAZ,CAAlB;AACP,OAAO,MAAMY,0BAA0B,GAAGC,MAAD,IAAU;AAC/C,SAAOC,QAAD,IAAY;AACdA,IAAAA,QAAQ,CAACJ,gBAAgB,CAAC,IAAD,CAAjB,CAAR;AACAlB,IAAAA,UAAU,CAACuB,UAAX,CAAsBF,MAAtB,EACKG,IADL,CACUC,IAAI,IAAI;AACVH,MAAAA,QAAQ,CAACH,UAAU,CAACM,IAAD,CAAX,CAAR;AACAH,MAAAA,QAAQ,CAACJ,gBAAgB,CAAC,KAAD,CAAjB,CAAR;AACH,KAJL;AAKH,GAPD;AAQH,CATM","sourcesContent":["import {profileAPI} from \"../api/api\";\n\nconst SET_PROFILE = \"SET-PROFILE\";\nlet initialState ={\n\n        posts: [\n            {text: \"post 1 \", id: 1, like: 12},\n            {text: \"post 2 \", id: 2, like: 13},\n            {text: \"post 3 \", id: 3, like: 15},\n            {text: \"post 4 \", id: 4, like: 2},\n        ],\n        currentValue: \"\",\n        profile: {},\n        isFetching:false,\n\n}\nlet  profileReducer =(state = initialState,action)=>{\n    switch (action.type) {\n        case \"ADD-POST\":{\n\n            let newState ={...state,\n            posts:[...state.posts]};\n\n            newState.posts.push({text: state.currentValue , id: 6, like: 2});\n            newState.currentValue =\"\";\n            debugger;\n            return newState;}\n        case \"POST-CHANGED\":{\n            debugger;\n            let newState = {...state};\n            newState.currentValue = action.value;\n            return newState;}\n        case \"SET-PROFILE\":{\n            debugger;\n            return { ...state, profile: {...action.profile}};\n        }\n        case \"TOGGLE-IS-FETCHING\":{\n            debugger;\n            return {...state, isFetching: action.isFetchingValue};\n        }\n        default:\n            return state;\n    }\n}\nexport default profileReducer;\nexport const toggleIsFetching =(isFetchingValue)=>({type:\"TOGGLE-IS-FETCHING\",isFetchingValue:isFetchingValue })\nexport const setProfile =(profile)=>({type:SET_PROFILE, profile:profile})\nexport const getUserProfileThunkCreator =(userId)=>{\n    return(dispatch)=>{\n        dispatch(toggleIsFetching(true));\n        profileAPI.getProfile(userId)\n            .then(data => {\n                dispatch(setProfile(data));\n                dispatch(toggleIsFetching(false));\n            })\n    }\n}"]},"metadata":{},"sourceType":"module"}