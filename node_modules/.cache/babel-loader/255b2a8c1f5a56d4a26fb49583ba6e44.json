{"ast":null,"code":"var _jsxFileName = \"/Users/andrejzaharcenko/Desktop/second-network/src/components/Profile/Posts/PostsContainer.js\";\nimport React from \"react\";\nimport s from \"./Posts.module.css\";\nimport Post from \"./Post/Post\";\nimport { addPostActionCreator, postChangedActionCreator } from \"../../../redux/state\";\nimport Posts from \"./Posts\";\nimport { connect } from \"react-redux\";\n\nconst PostsContainer = props => {\n  let addPost = () => {\n    props.dispatch(addPostActionCreator());\n  };\n\n  let postChanged = postValue => {\n    props.dispatch(postChangedActionCreator(postValue));\n  };\n\n  debugger;\n  let postsElements = props.posts.map(p => /*#__PURE__*/React.createElement(Post, {\n    key: p.id,\n    message: p.text,\n    id: p.id,\n    like: p.like,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 45\n    }\n  }));\n  return /*#__PURE__*/React.createElement(Posts, {\n    onPostChanged: postChanged,\n    addPost: addPost,\n    postsElements: postsElements,\n    postCurrentValue: props.postCurrentValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  });\n};\n\nexport default PostsContainer;\n\nlet mapStateToProps = state => {\n  return {\n    postsElements: state.posts.map(p => /*#__PURE__*/React.createElement(Post, {\n      key: p.id,\n      message: p.text,\n      id: p.id,\n      like: p.like,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 44\n      }\n    })),\n    postCurrentValue: state.postCurrentValue\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    addPost: () => {\n      dispatch(addPostActionCreator());\n    },\n    onPostChanged: postValue => {\n      dispatch(postChangedActionCreator(postValue));\n    }\n  };\n};\n\nconst dialogsCon = connect(mapStateToProps, mapDispatchToProps)(Posts);","map":{"version":3,"sources":["/Users/andrejzaharcenko/Desktop/second-network/src/components/Profile/Posts/PostsContainer.js"],"names":["React","s","Post","addPostActionCreator","postChangedActionCreator","Posts","connect","PostsContainer","props","addPost","dispatch","postChanged","postValue","postsElements","posts","map","p","id","text","like","postCurrentValue","mapStateToProps","state","mapDispatchToProps","onPostChanged","dialogsCon"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,oBAAd;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAAQC,oBAAR,EAA8BC,wBAA9B,QAA6D,sBAA7D;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,MAAMC,cAAc,GAAGC,KAAD,IAAS;AAE3B,MAAIC,OAAO,GAAG,MAAI;AACdD,IAAAA,KAAK,CAACE,QAAN,CAAeP,oBAAoB,EAAnC;AACH,GAFD;;AAGA,MAAIQ,WAAW,GAAGC,SAAD,IAAa;AAC1BJ,IAAAA,KAAK,CAACE,QAAN,CAAeN,wBAAwB,CAACQ,SAAD,CAAvC;AACH,GAFD;;AAGA;AACA,MAAIC,aAAa,GAAGL,KAAK,CAACM,KAAN,CAAYC,GAAZ,CAAgBC,CAAC,iBAAG,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,CAAC,CAACC,EAAb;AAAiB,IAAA,OAAO,EAAED,CAAC,CAACE,IAA5B;AAAkC,IAAA,EAAE,EAAEF,CAAC,CAACC,EAAxC;AAA4C,IAAA,IAAI,EAAED,CAAC,CAACG,IAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAApB,CAApB;AAEA,sBAEI,oBAAC,KAAD;AAAO,IAAA,aAAa,EAAER,WAAtB;AAAmC,IAAA,OAAO,EAAEF,OAA5C;AAAqD,IAAA,aAAa,EAAEI,aAApE;AAAmF,IAAA,gBAAgB,EAAEL,KAAK,CAACY,gBAA3G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ;AAIH,CAfD;;AAgBA,eAAeb,cAAf;;AACA,IAAIc,eAAe,GAAGC,KAAD,IAAS;AAC1B,SAAM;AACFT,IAAAA,aAAa,EAAES,KAAK,CAACR,KAAN,CAAYC,GAAZ,CAAgBC,CAAC,iBAAG,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,CAAC,CAACC,EAAb;AAAiB,MAAA,OAAO,EAAED,CAAC,CAACE,IAA5B;AAAkC,MAAA,EAAE,EAAEF,CAAC,CAACC,EAAxC;AAA4C,MAAA,IAAI,EAAED,CAAC,CAACG,IAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAApB,CADb;AAEFC,IAAAA,gBAAgB,EAAEE,KAAK,CAACF;AAFtB,GAAN;AAIH,CALD;;AAMA,IAAIG,kBAAkB,GAAGb,QAAD,IAAa;AACjC,SAAM;AACFD,IAAAA,OAAO,EAAE,MAAK;AAACC,MAAAA,QAAQ,CAACP,oBAAoB,EAArB,CAAR;AAAiC,KAD9C;AAEFqB,IAAAA,aAAa,EAAGZ,SAAD,IAAc;AAACF,MAAAA,QAAQ,CAACN,wBAAwB,CAACQ,SAAD,CAAzB,CAAR;AAA8C;AAF1E,GAAN;AAIH,CALD;;AAOA,MAAMa,UAAU,GAAGnB,OAAO,CAACe,eAAD,EAAiBE,kBAAjB,CAAP,CAA4ClB,KAA5C,CAAnB","sourcesContent":["import React from \"react\";\nimport s from \"./Posts.module.css\"\nimport Post from \"./Post/Post\";\nimport {addPostActionCreator, postChangedActionCreator} from \"../../../redux/state\";\nimport Posts from \"./Posts\";\nimport {connect} from \"react-redux\";\n\nconst PostsContainer =(props)=>{\n\n    let addPost = ()=>{\n        props.dispatch(addPostActionCreator())\n    }\n    let postChanged =(postValue)=>{\n        props.dispatch(postChangedActionCreator(postValue));\n    }\n    debugger;\n    let postsElements = props.posts.map(p=> <Post key={p.id} message={p.text} id={p.id} like={p.like}/>);\n\n    return(\n\n        <Posts onPostChanged={postChanged} addPost={addPost} postsElements={postsElements} postCurrentValue={props.postCurrentValue}/>\n    )\n}\nexport default PostsContainer;\nlet mapStateToProps =(state)=>{\n    return{\n        postsElements: state.posts.map(p=> <Post key={p.id} message={p.text} id={p.id} like={p.like}/>),\n        postCurrentValue: state.postCurrentValue,\n    }\n}\nlet mapDispatchToProps =(dispatch) =>{\n    return{\n        addPost: () =>{dispatch(addPostActionCreator())} ,\n        onPostChanged: (postValue) =>{dispatch(postChangedActionCreator(postValue))},\n    }\n}\n\nconst dialogsCon = connect(mapStateToProps,mapDispatchToProps)(Posts)"]},"metadata":{},"sourceType":"module"}