{"ast":null,"code":"var _jsxFileName = \"/Users/andrejzaharcenko/Desktop/second-network/src/components/Profile/Posts/Posts.js\";\nimport React from \"react\";\nimport s from \"./Posts.module.css\";\nimport Post from \"./Post/Post\";\nlet posts = [{\n  text: \"post 1 \",\n  id: 1,\n  like: 12\n}, {\n  text: \"post 2 \",\n  id: 2,\n  like: 13\n}, {\n  text: \"post 3 \",\n  id: 3,\n  like: 15\n}, {\n  text: \"post 4 \",\n  id: 4,\n  like: 2\n}]; // let postsElements = posts.map(p=> <Post message={p.text} id={p.id} like={p.like}/>);\n// let addPostActionCreator =()=>{\n//     let text = addNewPost.current.value;\n//      return {type:\"ADD-POST\", postText:text, postLike:2}\n//\n// }\n\nconst Posts = props => {\n  let addNewPost = React.createRef();\n\n  let addPost = () => {\n    let action = {\n      type: \"ADD-POST\"\n    };\n    props.dispatch(action);\n  };\n\n  let postChanged = () => {\n    let postValue = addNewPost.current.value;\n    debugger;\n    let action = {\n      type: \"POST-CHANGED\",\n      value: postValue\n    };\n    props.dispatch(action);\n  };\n\n  debugger;\n  let postsElements = props.posts.map(p => /*#__PURE__*/React.createElement(Post, {\n    message: p.text,\n    id: p.id,\n    like: p.like,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 45\n    }\n  }));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: s.postCreator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    onChange: postChanged,\n    ref: addNewPost,\n    value: props.postCurrentValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addPost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, \" post\")), postsElements);\n};\n\nexport default Posts;","map":{"version":3,"sources":["/Users/andrejzaharcenko/Desktop/second-network/src/components/Profile/Posts/Posts.js"],"names":["React","s","Post","posts","text","id","like","Posts","props","addNewPost","createRef","addPost","action","type","dispatch","postChanged","postValue","current","value","postsElements","map","p","postCreator","postCurrentValue"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,oBAAd;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAGA,IAAIC,KAAK,GAAG,CACR;AAACC,EAAAA,IAAI,EAAC,SAAN;AAAiBC,EAAAA,EAAE,EAAC,CAApB;AAAuBC,EAAAA,IAAI,EAAC;AAA5B,CADQ,EAER;AAACF,EAAAA,IAAI,EAAC,SAAN;AAAiBC,EAAAA,EAAE,EAAC,CAApB;AAAuBC,EAAAA,IAAI,EAAC;AAA5B,CAFQ,EAGR;AAACF,EAAAA,IAAI,EAAC,SAAN;AAAiBC,EAAAA,EAAE,EAAC,CAApB;AAAuBC,EAAAA,IAAI,EAAC;AAA5B,CAHQ,EAIR;AAACF,EAAAA,IAAI,EAAC,SAAN;AAAiBC,EAAAA,EAAE,EAAC,CAApB;AAAuBC,EAAAA,IAAI,EAAC;AAA5B,CAJQ,CAAZ,C,CAMA;AAEA;AACA;AACA;AACA;AACA;;AACA,MAAMC,KAAK,GAAGC,KAAD,IAAS;AAClB,MAAIC,UAAU,GAAGT,KAAK,CAACU,SAAN,EAAjB;;AACA,MAAIC,OAAO,GAAG,MAAI;AACd,QAAIC,MAAM,GAAE;AAACC,MAAAA,IAAI,EAAC;AAAN,KAAZ;AACAL,IAAAA,KAAK,CAACM,QAAN,CAAeF,MAAf;AACH,GAHD;;AAIA,MAAIG,WAAW,GAAE,MAAI;AACjB,QAAIC,SAAS,GAAIP,UAAU,CAACQ,OAAX,CAAmBC,KAApC;AACA;AACA,QAAIN,MAAM,GAAG;AAACC,MAAAA,IAAI,EAAC,cAAN;AAAsBK,MAAAA,KAAK,EAACF;AAA5B,KAAb;AACAR,IAAAA,KAAK,CAACM,QAAN,CAAeF,MAAf;AAEH,GAND;;AAQA;AACA,MAAIO,aAAa,GAAGX,KAAK,CAACL,KAAN,CAAYiB,GAAZ,CAAgBC,CAAC,iBAAG,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAEA,CAAC,CAACjB,IAAjB;AAAuB,IAAA,EAAE,EAAEiB,CAAC,CAAChB,EAA7B;AAAiC,IAAA,IAAI,EAAEgB,CAAC,CAACf,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAApB,CAApB;AAEA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAEL,CAAC,CAACqB,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAU,IAAA,QAAQ,EAAEP,WAApB;AAAiC,IAAA,GAAG,EAAEN,UAAtC;AAAkD,IAAA,KAAK,EAAED,KAAK,CAACe,gBAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAII;AAAQ,IAAA,OAAO,EAAEZ,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJJ,CADJ,EAOKQ,aAPL,CADJ;AAYH,CA7BD;;AA8BA,eAAeZ,KAAf","sourcesContent":["import React from \"react\";\nimport s from \"./Posts.module.css\"\nimport Post from \"./Post/Post\";\n\n\nlet posts = [\n    {text:\"post 1 \", id:1, like:12},\n    {text:\"post 2 \", id:2, like:13},\n    {text:\"post 3 \", id:3, like:15},\n    {text:\"post 4 \", id:4, like:2},\n]\n// let postsElements = posts.map(p=> <Post message={p.text} id={p.id} like={p.like}/>);\n\n// let addPostActionCreator =()=>{\n//     let text = addNewPost.current.value;\n//      return {type:\"ADD-POST\", postText:text, postLike:2}\n//\n// }\nconst Posts =(props)=>{\n    let addNewPost = React.createRef();\n    let addPost = ()=>{\n        let action ={type:\"ADD-POST\"}\n        props.dispatch(action)\n    }\n    let postChanged =()=>{\n        let postValue  = addNewPost.current.value;\n        debugger;\n        let action = {type:\"POST-CHANGED\", value:postValue};\n        props.dispatch(action);\n\n    }\n\n    debugger;\n    let postsElements = props.posts.map(p=> <Post message={p.text} id={p.id} like={p.like}/>);\n\n    return(\n        <div>\n            <div className={s.postCreator}>\n                <textarea onChange={postChanged} ref={addNewPost} value={props.postCurrentValue}/>\n\n                <br/>\n                <button onClick={addPost}> post</button>\n            </div>\n            {postsElements}\n        </div>\n\n    )\n}\nexport default Posts;"]},"metadata":{},"sourceType":"module"}