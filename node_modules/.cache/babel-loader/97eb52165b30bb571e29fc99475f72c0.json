{"ast":null,"code":"var _jsxFileName = \"/Users/andrejzaharcenko/Desktop/second-network/src/components/Profile/ProfileAPIContainer.js\";\nimport React from \"react\";\nimport Profile from \"./Profile\";\n\nclass ProfileAPIContainer extends React.Component {\n  componentDidMount() {\n    let userId = this.props.match.params.userId;\n\n    if (!userId) {\n      userId = this.props.authorizedUserId;\n\n      if (!userId) {\n        this.props.history.push(\"/login\"); //здесь не совсем правильно, это мы вмешиваемся в жизненный цикл компоненты , лучше елать через рендер\n        // но рендер только в jsx, а это метод программный\n      }\n    }\n\n    this.props.getUserProfileThunkCreator(userId);\n    this.props.getUserProfileStatusThunkCreator(userId);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Profile, {\n      isOwner: this.props.match.params.userId === this.props.authorizedUserId,\n      profilePage: this.props.profile,\n      status: this.props.status,\n      changeStatus: this.props.changeProfileStatusThunkCreator,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 16\n      }\n    });\n  }\n\n}\n\nexport default ProfileAPIContainer;","map":{"version":3,"sources":["/Users/andrejzaharcenko/Desktop/second-network/src/components/Profile/ProfileAPIContainer.js"],"names":["React","Profile","ProfileAPIContainer","Component","componentDidMount","userId","props","match","params","authorizedUserId","history","push","getUserProfileThunkCreator","getUserProfileStatusThunkCreator","render","profile","status","changeProfileStatusThunkCreator"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,mBAAN,SAAkCF,KAAK,CAACG,SAAxC,CAAkD;AAC9CC,EAAAA,iBAAiB,GAAG;AAEhB,QAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAArC;;AACA,QAAG,CAACA,MAAJ,EAAY;AACRA,MAAAA,MAAM,GAAE,KAAKC,KAAL,CAAWG,gBAAnB;;AACA,UAAG,CAACJ,MAAJ,EAAW;AACP,aAAKC,KAAL,CAAWI,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB,EADO,CAEP;AACA;AACH;AACJ;;AACD,SAAKL,KAAL,CAAWM,0BAAX,CAAsCP,MAAtC;AACA,SAAKC,KAAL,CAAWO,gCAAX,CAA4CR,MAA5C;AAEH;;AACDS,EAAAA,MAAM,GAAG;AAEL,wBAAO,oBAAC,OAAD;AAAS,MAAA,OAAO,EAAE,KAAKR,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAAxB,KAAkC,KAAKC,KAAL,CAAWG,gBAA/D;AAAiF,MAAA,WAAW,EAAG,KAAKH,KAAL,CAAWS,OAA1G;AAAoH,MAAA,MAAM,EAAE,KAAKT,KAAL,CAAWU,MAAvI;AAA+I,MAAA,YAAY,EAAE,KAAKV,KAAL,CAAWW,+BAAxK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAnB6C;;AAqBlD,eAAef,mBAAf","sourcesContent":["import React from \"react\";\nimport Profile from \"./Profile\";\n\nclass ProfileAPIContainer extends React.Component {\n    componentDidMount() {\n\n        let userId = this.props.match.params.userId;\n        if(!userId) {\n            userId =this.props.authorizedUserId;\n            if(!userId){\n                this.props.history.push(\"/login\");\n                //здесь не совсем правильно, это мы вмешиваемся в жизненный цикл компоненты , лучше елать через рендер\n                // но рендер только в jsx, а это метод программный\n            }\n        }\n        this.props.getUserProfileThunkCreator(userId);\n        this.props.getUserProfileStatusThunkCreator(userId);\n\n    }\n    render() {\n\n        return(<Profile isOwner={this.props.match.params.userId ===this.props.authorizedUserId} profilePage ={this.props.profile}  status={this.props.status} changeStatus={this.props.changeProfileStatusThunkCreator} />)\n    }\n}\nexport default ProfileAPIContainer;"]},"metadata":{},"sourceType":"module"}